!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/mos/zoo/c_shit/apue.3e/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210905.0/
$(LIBMISC)	./lib/Makefile	/^$(LIBMISC):	$(OBJS)$/;"	t
$(PROGS)	./advio/Makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
$(PROGS)	./datafiles/Makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
$(PROGS)	./environ/Makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
$(PROGS)	./exercises/Makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
$(PROGS)	./filedir/Makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
$(PROGS)	./fileio/Makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
$(PROGS)	./intro/Makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
$(PROGS)	./ipc1/Makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
$(PROGS)	./ipc2/Makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
$(PROGS)	./ipc2/open.fe/Makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
$(PROGS)	./ipc2/open/Makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
$(PROGS)	./ipc2/opend.fe/Makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
$(PROGS)	./ipc2/opend/Makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
$(PROGS)	./printer/Makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
$(PROGS)	./proc/Makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
$(PROGS)	./pty/Makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
$(PROGS)	./relation/Makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
$(PROGS)	./signals/Makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
$(PROGS)	./sockets/makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
$(PROGS)	./standards/Makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
$(PROGS)	./stdio/Makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
$(PROGS)	./termios/Makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
$(PROGS)	./threadctl/Makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
$(PROGS)	./threads/Makefile	/^$(PROGS):	$(LIBAPUE)$/;"	t
ACCT	./proc/Makefile	/^  ACCT=pracct$/;"	m
ACCT	./proc/Makefile	/^ACCT=$/;"	m
ACCTFLAGS	./proc/Makefile	/^  ACCTFLAGS = -DHAS_AC_STAT$/;"	m
ACCTFLAGS	./proc/Makefile	/^  ACCTFLAGS = -DHAS_AXSIG -DHAS_ACORE$/;"	m
ACCTFLAGS	./proc/Makefile	/^ACCTFLAGS=$/;"	m
ACORE	./proc/pracct.c	/^#define ACORE /;"	d	file:
ARRAY_SIZE	./ipc1/tshm.c	/^#define	ARRAY_SIZE	/;"	d	file:
AXSIG	./proc/pracct.c	/^#define AXSIG /;"	d	file:
BAR	./threads/Makefile	/^  BAR = barrier$/;"	m
BAR	./threads/Makefile	/^BAR =$/;"	m
BIGCOUNT	./lib/semaph.c	/^#define	BIGCOUNT	/;"	d	file:
BSZ	./advio/rot13a.c	/^#define BSZ /;"	d	file:
BSZ	./advio/rot13c2.c	/^#define BSZ /;"	d	file:
BSZ	./advio/rot13c2.c.in	/^#define BSZ /;"	d	file:
BSZ	./stdio/memstr.c	/^#define BSZ /;"	d	file:
BUFFSIZE	./fileio/mycat.c	/^#define	BUFFSIZE	/;"	d	file:
BUFFSIZE	./intro/mycat.c	/^#define	BUFFSIZE	/;"	d	file:
BUFFSIZE	./ipc2/open.fe/main.c	/^#define	BUFFSIZE	/;"	d	file:
BUFFSIZE	./ipc2/open/main.c	/^#define	BUFFSIZE	/;"	d	file:
BUFFSIZE	./pty/loop.c	/^#define	BUFFSIZE	/;"	d	file:
BUFFSIZE	./signals/sigtstp.c	/^#define	BUFFSIZE	/;"	d	file:
BUFLEN	./sockets/ruptime-dg.c	/^#define BUFLEN	/;"	d	file:
BUFLEN	./sockets/ruptime.c	/^#define BUFLEN	/;"	d	file:
BUFLEN	./sockets/ruptimed-dg.c	/^#define BUFLEN	/;"	d	file:
BUFLEN	./sockets/ruptimed.c	/^#define BUFLEN	/;"	d	file:
CBREAK	./lib/ttymodes.c	/^static enum { RESET, RAW, CBREAK }	ttystate = RESET;$/;"	e	enum:__anonc8c5a5b20103	file:
CLD	./signals/Makefile	/^  CLD = child$/;"	m
CLD	./signals/Makefile	/^CLD =$/;"	m
CLI_PATH	./lib/cliconn.c	/^#define	CLI_PATH	/;"	d	file:
CLI_PERM	./lib/cliconn.c	/^#define	CLI_PERM	/;"	d	file:
CLOCK_REALTIME	./threadctl/timeout.c	/^#define CLOCK_REALTIME /;"	d	file:
CL_OPEN	./ipc2/open.fe/open.h	/^#define	CL_OPEN /;"	d
CL_OPEN	./ipc2/open/open.h	/^#define	CL_OPEN /;"	d
CL_OPEN	./ipc2/opend.fe/opend.h	/^#define	CL_OPEN /;"	d
CL_OPEN	./ipc2/opend/opend.h	/^#define	CL_OPEN /;"	d
COMM_OBJ	./db/Makefile	/^COMM_OBJ = db.o$/;"	m
CONFIG_FILE	./printer/print.h	/^#define CONFIG_FILE /;"	d
CONTROLLEN	./ipc2/recvfd2.c	/^#define	CONTROLLEN	/;"	d	file:
CONTROLLEN	./ipc2/sendfd2.c	/^#define	CONTROLLEN	/;"	d	file:
CONTROLLEN	./lib/recvfd.c	/^#define	CONTROLLEN	/;"	d	file:
CONTROLLEN	./lib/sendfd.c	/^#define	CONTROLLEN	/;"	d	file:
COPYINCR	./advio/mcopy2.c	/^#define COPYINCR /;"	d	file:
COUNT	./db/db.c	/^typedef unsigned long	COUNT;	\/* unsigned counter *\/$/;"	t	typeref:typename:unsigned long	file:
CREDOPT	./ipc2/recvfd2.c	/^#define CREDOPT	/;"	d	file:
CREDSLEN	./ipc2/recvfd2.c	/^#define CREDSLEN	/;"	d	file:
CREDSLEN	./ipc2/sendfd2.c	/^#define CREDSLEN	/;"	d	file:
CREDSTRUCT	./ipc2/recvfd2.c	/^#define CREDSTRUCT	/;"	d	file:
CREDSTRUCT	./ipc2/sendfd2.c	/^#define CREDSTRUCT	/;"	d	file:
CR_UID	./ipc2/recvfd2.c	/^#define CR_UID	/;"	d	file:
CS_OPEN	./ipc2/open/open.h	/^#define CS_OPEN /;"	d
CS_OPEN	./ipc2/opend/opend.h	/^#define	CS_OPEN /;"	d
Client	./ipc2/opend/opend.h	/^} Client;$/;"	t	typeref:struct:__anonad44fb700108
DATADIR	./printer/print.h	/^#define DATADIR /;"	d
DATLEN_MAX	./db/apue_db.h	/^#define DATLEN_MAX	/;"	d
DATLEN_MIN	./db/apue_db.h	/^#define DATLEN_MIN	/;"	d
DB	./db/db.c	/^} DB;$/;"	t	typeref:struct:__anon3a7333ee0108	file:
DBHANDLE	./db/apue_db.h	/^typedef	void *	DBHANDLE;$/;"	t	typeref:typename:void *
DBHASH	./db/db.c	/^typedef unsigned long	DBHASH;	\/* hash values *\/$/;"	t	typeref:typename:unsigned long	file:
DB_INSERT	./db/apue_db.h	/^#define DB_INSERT	/;"	d
DB_REPLACE	./db/apue_db.h	/^#define DB_REPLACE	/;"	d
DB_STORE	./db/apue_db.h	/^#define DB_STORE	/;"	d
DEF_PAGER	./ipc1/pipe2.c	/^#define	DEF_PAGER	/;"	d	file:
DEPTH	./exercises/longpath.c	/^#define	DEPTH /;"	d	file:
DIRS	./Makefile	/^DIRS = lib intro sockets advio daemons datafiles db environ \\$/;"	m
DIR_MODE	./include/apue.h	/^#define	DIR_MODE	/;"	d
ETIME	./printer/print.h	/^#define ETIME /;"	d
EXTRA	./printer/Makefile	/^EXTRA=$/;"	m
EXTRALD	./db/Makefile	/^  EXTRALD=-R.$/;"	m
EXTRALD	./db/Makefile	/^  EXTRALD=-Wl,-rpath=.$/;"	m
EXTRALD	./db/Makefile	/^  EXTRALD=-m64 -R.$/;"	m
EXTRALIBS	./advio/Makefile	/^  EXTRALIBS=-lrt$/;"	m
EXTRALIBS	./exercises/Makefile	/^  EXTRALIBS=-pthread$/;"	m
EXTRALIBS	./ipc2/Makefile	/^  EXTRALIBS=-lsocket -lnsl$/;"	m
EXTRALIBS	./ipc2/Makefile	/^  EXTRALIBS=-pthread$/;"	m
EXTRALIBS	./ipc2/open.fe/Makefile	/^  EXTRALIBS=-lsocket -lnsl$/;"	m
EXTRALIBS	./ipc2/open/Makefile	/^  EXTRALIBS=-lsocket -lnsl$/;"	m
EXTRALIBS	./ipc2/opend.fe/Makefile	/^  EXTRALIBS=-lsocket -lnsl$/;"	m
EXTRALIBS	./ipc2/opend/Makefile	/^  EXTRALIBS=-lsocket -lnsl$/;"	m
EXTRALIBS	./printer/Makefile	/^  EXTRALIBS=-lsocket -lnsl -lrt -lpthread$/;"	m
EXTRALIBS	./printer/Makefile	/^  EXTRALIBS=-pthread$/;"	m
EXTRALIBS	./pty/Makefile	/^  EXTRALIBS=-lsocket -lnsl$/;"	m
EXTRALIBS	./sockets/makefile	/^  EXTRALIBS = -lsocket -lnsl$/;"	m
EXTRALIBS	./threadctl/Makefile	/^  EXTRALIBS = -lpthread$/;"	m
EXTRALIBS	./threadctl/Makefile	/^  EXTRALIBS = -pthread$/;"	m
EXTRALIBS	./threads/Makefile	/^  EXTRALIBS=-lpthread -lrt$/;"	m
EXTRALIBS	./threads/Makefile	/^  EXTRALIBS=-pthread -lrt -lbsd$/;"	m
EXTRALIBS	./threads/Makefile	/^  EXTRALIBS=-pthread$/;"	m
EXTRALIBS	./threads/Makefile	/^EXTRALIBS=-pthread$/;"	m
FDPASS	./ipc2/Makefile	/^	FDPASS = recvfd2.o sendfd2.o$/;"	m
FDPASS	./ipc2/Makefile	/^FDPASS =$/;"	m
FIFO	./exercises/fifo1.c	/^#define	FIFO	/;"	d	file:
FILENMSZ	./printer/print.h	/^#define FILENMSZ /;"	d
FILEPERM	./printer/print.h	/^#define FILEPERM /;"	d
FILE_MODE	./include/apue.h	/^#define	FILE_MODE	/;"	d
FMEM	./exercises/Makefile	/^  FMEM = fmemopen.o$/;"	m
FMEM	./exercises/Makefile	/^  FMEM =$/;"	m
FMT	./proc/pracct.c	/^#define FMT /;"	d	file:
FREE_OFF	./db/db.c	/^#define FREE_OFF /;"	d	file:
FTW_D	./filedir/ftw8.c	/^#define	FTW_D	/;"	d	file:
FTW_DNR	./filedir/ftw8.c	/^#define	FTW_DNR	/;"	d	file:
FTW_F	./filedir/ftw8.c	/^#define	FTW_F	/;"	d	file:
FTW_NS	./filedir/ftw8.c	/^#define	FTW_NS	/;"	d	file:
GETPW	./exercises/Makefile	/^  GETPW = getpw44bsd$/;"	m
GETPW	./exercises/Makefile	/^  GETPW = getpwsvr4$/;"	m
HASH	./threads/mutex2.c	/^#define HASH(/;"	d	file:
HASH	./threads/mutex3.c	/^#define HASH(/;"	d	file:
HASH_OFF	./db/db.c	/^#define HASH_OFF /;"	d	file:
HBUFSZ	./printer/print.h	/^#define HBUFSZ /;"	d
HDRS	./printer/Makefile	/^HDRS = print.h ipp.h$/;"	m
HOST_NAME_MAX	./printer/print.h	/^#define HOST_NAME_MAX /;"	d
HOST_NAME_MAX	./sockets/ruptimed-dg.c	/^#define HOST_NAME_MAX /;"	d	file:
HOST_NAME_MAX	./sockets/ruptimed-fd.c	/^#define HOST_NAME_MAX /;"	d	file:
HOST_NAME_MAX	./sockets/ruptimed.c	/^#define HOST_NAME_MAX /;"	d	file:
HTTP_INFO	./printer/printd.c	/^#define HTTP_INFO(/;"	d	file:
HTTP_SUCCESS	./printer/printd.c	/^#define HTTP_SUCCESS(/;"	d	file:
IBUFSZ	./printer/print.h	/^#define IBUFSZ /;"	d
IDXLEN_MAX	./db/apue_db.h	/^#define IDXLEN_MAX	/;"	d
IDXLEN_MIN	./db/apue_db.h	/^#define IDXLEN_MIN	/;"	d
IDXLEN_SZ	./db/db.c	/^#define IDXLEN_SZ	/;"	d	file:
IOBUFSZ	./printer/print.h	/^#define IOBUFSZ /;"	d
IPP_PORT	./printer/print.h	/^#define IPP_PORT /;"	d
JOBFILE	./printer/print.h	/^#define JOBFILE /;"	d
JOBNM_MAX	./printer/print.h	/^#define JOBNM_MAX /;"	d
KEY	./exercises/pollmsg2.c	/^#define KEY	/;"	d	file:
KEY	./ipc2/pollmsg.c	/^#define KEY	/;"	d	file:
LDCMD	./db/Makefile	/^  LDCMD=$(CC) -shared -o libapue_db.so.1 -L$(ROOT)\/lib -lapue -lc db.o$/;"	m
LDCMD	./db/Makefile	/^  LDCMD=$(LD) -64 -G -Bdynamic -R\/lib\/64:\/usr\/ucblib\/sparcv9 -o libapue_db.so.1 -L\/lib\/64/;"	m
LIBMISC	./db/Makefile	/^LIBMISC	= libapue_db.a$/;"	m
LIBMISC	./lib/Makefile	/^LIBMISC	= libapue.a$/;"	m
LOCKFILE	./daemons/single.c	/^#define LOCKFILE /;"	d	file:
LOCKMODE	./daemons/single.c	/^#define LOCKMODE /;"	d	file:
LPNAME	./printer/print.h	/^#define LPNAME	/;"	d
MALLOC_SIZE	./ipc1/tshm.c	/^#define	MALLOC_SIZE	/;"	d	file:
MAXADDRLEN	./sockets/ruptimed-dg.c	/^#define MAXADDRLEN	/;"	d	file:
MAXARGC	./lib/bufargs.c	/^#define	MAXARGC	/;"	d	file:
MAXCFGLINE	./printer/util.c	/^#define MAXCFGLINE /;"	d	file:
MAXFMTLEN	./printer/util.c	/^#define MAXFMTLEN /;"	d	file:
MAXKWLEN	./printer/util.c	/^#define MAXKWLEN /;"	d	file:
MAXLINE	./include/apue.h	/^#define	MAXLINE	/;"	d
MAXMSZ	./exercises/pollmsg2.c	/^#define MAXMSZ	/;"	d	file:
MAXMSZ	./ipc2/pollmsg.c	/^#define MAXMSZ	/;"	d	file:
MAXMSZ	./ipc2/sendmsg.c	/^#define MAXMSZ /;"	d	file:
MAXSLEEP	./sockets/clconn.c	/^#define MAXSLEEP /;"	d	file:
MAXSLEEP	./sockets/clconn2.c	/^#define MAXSLEEP /;"	d	file:
MAXSTRINGSZ	./threadctl/getenv1.c	/^#define MAXSTRINGSZ	/;"	d	file:
MAXSTRINGSZ	./threadctl/getenv3.c	/^#define MAXSTRINGSZ	/;"	d	file:
MAXSZ	./exercises/longpath.c	/^#define MAXSZ /;"	d	file:
MAX_PASS_LEN	./termios/getpass.c	/^#define	MAX_PASS_LEN	/;"	d	file:
MEMSTR	./stdio/Makefile	/^  MEMSTR = memstr$/;"	m
MEMSTR	./stdio/Makefile	/^  MEMSTR =$/;"	m
MIN	./exercises/fmemopen.c	/^#define MIN(/;"	d	file:
MOREPROGS	./advio/Makefile	/^MOREPROGS = rot13c2$/;"	m
MOREPROGS	./filedir/Makefile	/^MOREPROGS = ftw8$/;"	m
MOREPROGS	./proc/Makefile	/^MOREPROGS = systest1 systest3$/;"	m
MOREPROGS	./signals/Makefile	/^MOREPROGS = systest2 tsleep2$/;"	m
MOREPROGS	./sockets/makefile	/^MOREPROGS = findsvc ruptime-dg$/;"	m
MSGLEN_MAX	./printer/print.h	/^#define MSGLEN_MAX /;"	d
MS_APPEND	./exercises/fmemopen.c	/^#define MS_APPEND	/;"	d	file:
MS_MYBUF	./exercises/fmemopen.c	/^#define MS_MYBUF	/;"	d	file:
MS_READ	./exercises/fmemopen.c	/^#define MS_READ	/;"	d	file:
MS_TRUNCATE	./exercises/fmemopen.c	/^#define MS_TRUNCATE	/;"	d	file:
MS_WRITE	./exercises/fmemopen.c	/^#define MS_WRITE	/;"	d	file:
Myfunc	./filedir/ftw8.c	/^typedef	int	Myfunc(const char *, const struct stat *, int);$/;"	t	typeref:typename:int ()(const char *,const struct stat *,int)	file:
NALLOC	./ipc2/opend/client.c	/^#define	NALLOC	/;"	d	file:
NALLOC	./ipc2/opend/loop.poll.c	/^#define NALLOC	/;"	d	file:
NAME	./exercises/longpath.c	/^#define	NAME /;"	d	file:
NBUF	./advio/rot13c2.c	/^#define NBUF /;"	d	file:
NBUF	./advio/rot13c2.c.in	/^#define NBUF /;"	d	file:
NEWLINE	./db/db.c	/^#define NEWLINE /;"	d	file:
NHASH	./threads/mutex2.c	/^#define NHASH /;"	d	file:
NHASH	./threads/mutex3.c	/^#define NHASH /;"	d	file:
NHASH_DEF	./db/db.c	/^#define NHASH_DEF	/;"	d	file:
NLOOPS	./ipc1/devzero.c	/^#define	NLOOPS	/;"	d	file:
NQ	./exercises/pollmsg2.c	/^#define NQ	/;"	d	file:
NQ	./ipc2/pollmsg.c	/^#define NQ	/;"	d	file:
NTHR	./threads/barrier.c	/^#define NTHR /;"	d	file:
NUMNUM	./threads/barrier.c	/^#define NUMNUM /;"	d	file:
OBJS	./lib/Makefile	/^OBJS   = bufargs.o cliconn.o clrfl.o \\$/;"	m
OPEN_MAX_GUESS	./exercises/openmax.c	/^#define OPEN_MAX_GUESS	/;"	d	file:
OPEN_MAX_GUESS	./lib/openmax.c	/^#define	OPEN_MAX_GUESS	/;"	d	file:
OPTSTR	./pty/main.c	/^#define OPTSTR /;"	d	file:
OP_CANCEL_JOB	./printer/ipp.h	/^#define OP_CANCEL_JOB /;"	d
OP_CREATE_JOB	./printer/ipp.h	/^#define OP_CREATE_JOB /;"	d
OP_GET_JOBS	./printer/ipp.h	/^#define OP_GET_JOBS /;"	d
OP_GET_JOB_ATTR	./printer/ipp.h	/^#define OP_GET_JOB_ATTR /;"	d
OP_GET_PRINTER_ATTR	./printer/ipp.h	/^#define OP_GET_PRINTER_ATTR /;"	d
OP_HOLD_JOB	./printer/ipp.h	/^#define OP_HOLD_JOB /;"	d
OP_PAUSE_PRINTER	./printer/ipp.h	/^#define OP_PAUSE_PRINTER /;"	d
OP_PRINT_JOB	./printer/ipp.h	/^#define OP_PRINT_JOB /;"	d
OP_PRINT_URI	./printer/ipp.h	/^#define OP_PRINT_URI /;"	d
OP_PURGE_JOBS	./printer/ipp.h	/^#define OP_PURGE_JOBS /;"	d
OP_RELEASE_JOB	./printer/ipp.h	/^#define OP_RELEASE_JOB /;"	d
OP_RESTART_JOB	./printer/ipp.h	/^#define OP_RESTART_JOB /;"	d
OP_RESUME_PRINTER	./printer/ipp.h	/^#define OP_RESUME_PRINTER /;"	d
OP_SEND_DOC	./printer/ipp.h	/^#define OP_SEND_DOC /;"	d
OP_SEND_URI	./printer/ipp.h	/^#define OP_SEND_URI /;"	d
OP_VALIDATE_JOB	./printer/ipp.h	/^#define OP_VALIDATE_JOB /;"	d
PAGER	./ipc1/popen2.c	/^#define	PAGER	/;"	d	file:
PATH_MAX_GUESS	./lib/pathalloc.c	/^#define	PATH_MAX_GUESS	/;"	d	file:
PLATFORM	./advio/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./daemons/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./datafiles/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./db/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./environ/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./exercises/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./filedir/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./fileio/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./intro/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./ipc1/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./ipc2/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./ipc2/open.fe/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./ipc2/open/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./ipc2/opend.fe/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./ipc2/opend/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./lib/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./printer/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./proc/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./pty/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./relation/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./signals/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./sockets/makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./standards/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./stdio/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./termios/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./threadctl/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PLATFORM	./threads/Makefile	/^PLATFORM=$(shell $(ROOT)\/systype.sh)$/;"	m
PROGS	./advio/Makefile	/^PROGS =	deadlock mandatory mcopy2 nonblockw rot13a$/;"	m
PROGS	./datafiles/Makefile	/^PROGS =	strftime$/;"	m
PROGS	./environ/Makefile	/^PROGS = doatexit echoarg getrlimit hello1 testjmp$/;"	m
PROGS	./exercises/Makefile	/^PROGS =	bo fifo1 getlogin goodexit longpath pendlock prtime sizepipe vfork3 zombie$/;"	m
PROGS	./filedir/Makefile	/^PROGS =	access cdpwd changemod devrdev filetype mycd umask unlink $(ZAP)$/;"	m
PROGS	./fileio/Makefile	/^PROGS =	fileflags hole mycat seek$/;"	m
PROGS	./intro/Makefile	/^PROGS =	getcputc hello ls1 mycat shell1 shell2 testerror uidgid$/;"	m
PROGS	./ipc1/Makefile	/^PROGS =	add2 add2stdio devzero myuclc pipe1 pipe2 pipe4 popen1 popen2 tshm$/;"	m
PROGS	./ipc2/Makefile	/^PROGS =	bindunix pollmsg sendmsg$/;"	m
PROGS	./ipc2/open.fe/Makefile	/^PROGS =	openclient$/;"	m
PROGS	./ipc2/open/Makefile	/^PROGS =	openclient$/;"	m
PROGS	./ipc2/opend.fe/Makefile	/^PROGS =	opend$/;"	m
PROGS	./ipc2/opend/Makefile	/^PROGS = opend.poll opend.select$/;"	m
PROGS	./printer/Makefile	/^PROGS = print printd$/;"	m
PROGS	./proc/Makefile	/^PROGS =	echoall exec1 exec2 fork1 fork2 nice pruids tellwait1 tellwait2 test1 times1 vfork1 wait/;"	m
PROGS	./pty/Makefile	/^PROGS =	pty$/;"	m
PROGS	./relation/Makefile	/^PROGS =	orphan3$/;"	m
PROGS	./signals/Makefile	/^PROGS =	critical mask read1 read2 reenter sigtstp sigusr suspend1 suspend2$/;"	m
PROGS	./sockets/makefile	/^PROGS = ruptime ruptimed ruptimed-fd ruptimed-dg$/;"	m
PROGS	./standards/Makefile	/^PROGS =	conf options$/;"	m
PROGS	./stdio/Makefile	/^PROGS =	buf fgetsfputs getcharbug getcputc mkstemp tempfiles$/;"	m
PROGS	./termios/Makefile	/^PROGS =	csize settty t_getpass t_isatty t_raw t_ttyname winch$/;"	m
PROGS	./threadctl/Makefile	/^PROGS =	atfork suspend$/;"	m
PROGS	./threads/Makefile	/^PROGS = badexit2 cleanup exitstatus threadid$/;"	m
PR_TEXT	./printer/print.h	/^#define PR_TEXT	/;"	d
PSCMD	./exercises/zombie.c	/^#define PSCMD	/;"	d	file:
PTR_MAX	./db/db.c	/^#define PTR_MAX /;"	d	file:
PTR_SZ	./db/db.c	/^#define PTR_SZ /;"	d	file:
QLEN	./lib/servlisten.c	/^#define QLEN	/;"	d	file:
QLEN	./printer/print.h	/^#define QLEN /;"	d
QLEN	./sockets/ruptimed-fd.c	/^#define QLEN /;"	d	file:
QLEN	./sockets/ruptimed.c	/^#define QLEN /;"	d	file:
RAW	./lib/ttymodes.c	/^static enum { RESET, RAW, CBREAK }	ttystate = RESET;$/;"	e	enum:__anonc8c5a5b20103	file:
READ_PENDING	./advio/rot13c2.c	/^	READ_PENDING = 1,$/;"	e	enum:rwop	file:
READ_PENDING	./advio/rot13c2.c.in	/^	READ_PENDING = 1,$/;"	e	enum:rwop	file:
REQDIR	./printer/print.h	/^#define REQDIR /;"	d
RESET	./lib/ttymodes.c	/^static enum { RESET, RAW, CBREAK }	ttystate = RESET;$/;"	e	enum:__anonc8c5a5b20103	file:
RIGHTSLEN	./ipc2/recvfd2.c	/^#define RIGHTSLEN	/;"	d	file:
RIGHTSLEN	./ipc2/sendfd2.c	/^#define RIGHTSLEN	/;"	d	file:
ROOT	./advio/Makefile	/^ROOT=..$/;"	m
ROOT	./daemons/Makefile	/^ROOT=..$/;"	m
ROOT	./datafiles/Makefile	/^ROOT=..$/;"	m
ROOT	./db/Makefile	/^ROOT=..$/;"	m
ROOT	./environ/Makefile	/^ROOT=..$/;"	m
ROOT	./exercises/Makefile	/^ROOT=..$/;"	m
ROOT	./filedir/Makefile	/^ROOT=..$/;"	m
ROOT	./fileio/Makefile	/^ROOT=..$/;"	m
ROOT	./intro/Makefile	/^ROOT=..$/;"	m
ROOT	./ipc1/Makefile	/^ROOT=..$/;"	m
ROOT	./ipc2/Makefile	/^ROOT=..$/;"	m
ROOT	./ipc2/open.fe/Makefile	/^ROOT=..\/..$/;"	m
ROOT	./ipc2/open/Makefile	/^ROOT=..\/..$/;"	m
ROOT	./ipc2/opend.fe/Makefile	/^ROOT=..\/..$/;"	m
ROOT	./ipc2/opend/Makefile	/^ROOT=..\/..$/;"	m
ROOT	./lib/Makefile	/^ROOT=..$/;"	m
ROOT	./printer/Makefile	/^ROOT=..$/;"	m
ROOT	./proc/Makefile	/^ROOT=..$/;"	m
ROOT	./pty/Makefile	/^ROOT=..$/;"	m
ROOT	./relation/Makefile	/^ROOT=..$/;"	m
ROOT	./signals/Makefile	/^ROOT=..$/;"	m
ROOT	./sockets/makefile	/^ROOT=..$/;"	m
ROOT	./standards/Makefile	/^ROOT=..$/;"	m
ROOT	./stdio/Makefile	/^ROOT=..$/;"	m
ROOT	./termios/Makefile	/^ROOT=..$/;"	m
ROOT	./threadctl/Makefile	/^ROOT=..$/;"	m
ROOT	./threads/Makefile	/^ROOT=..$/;"	m
RWRWRW	./filedir/umask.c	/^#define RWRWRW /;"	d	file:
SCM_CREDTYPE	./ipc2/recvfd2.c	/^#define SCM_CREDTYPE	/;"	d	file:
SCM_CREDTYPE	./ipc2/sendfd2.c	/^#define SCM_CREDTYPE	/;"	d	file:
SECTONSEC	./threadctl/timeout.c	/^#define SECTONSEC /;"	d	file:
SEP	./db/db.c	/^#define SEP /;"	d	file:
SHM_MODE	./ipc1/tshm.c	/^#define	SHM_MODE	/;"	d	file:
SHM_SIZE	./ipc1/tshm.c	/^#define	SHM_SIZE	/;"	d	file:
SIGBAD	./signals/setops.c	/^#define	SIGBAD(/;"	d	file:
SIZE	./ipc1/devzero.c	/^#define	SIZE	/;"	d	file:
SPACE	./db/db.c	/^#define SPACE /;"	d	file:
SPOOLDIR	./printer/print.h	/^#define SPOOLDIR /;"	d
STALE	./lib/servaccept.c	/^#define	STALE	/;"	d	file:
STARTDIR	./exercises/longpath.c	/^#define	STARTDIR /;"	d	file:
STATCLASS_CLIERR	./printer/ipp.h	/^#define STATCLASS_CLIERR(/;"	d
STATCLASS_INFO	./printer/ipp.h	/^#define STATCLASS_INFO(/;"	d
STATCLASS_OK	./printer/ipp.h	/^#define STATCLASS_OK(/;"	d
STATCLASS_REDIR	./printer/ipp.h	/^#define STATCLASS_REDIR(/;"	d
STATCLASS_SRVERR	./printer/ipp.h	/^#define STATCLASS_SRVERR(/;"	d
STAT_CLI_ACCERR	./printer/ipp.h	/^#define STAT_CLI_ACCERR /;"	d
STAT_CLI_ATTRCON	./printer/ipp.h	/^#define STAT_CLI_ATTRCON /;"	d
STAT_CLI_BADFMT	./printer/ipp.h	/^#define STAT_CLI_BADFMT /;"	d
STAT_CLI_BADREQ	./printer/ipp.h	/^#define STAT_CLI_BADREQ /;"	d
STAT_CLI_COMPERR	./printer/ipp.h	/^#define STAT_CLI_COMPERR /;"	d
STAT_CLI_FMTERR	./printer/ipp.h	/^#define STAT_CLI_FMTERR /;"	d
STAT_CLI_FORBID	./printer/ipp.h	/^#define STAT_CLI_FORBID /;"	d
STAT_CLI_NOAUTH	./printer/ipp.h	/^#define STAT_CLI_NOAUTH /;"	d
STAT_CLI_NOCHAR	./printer/ipp.h	/^#define STAT_CLI_NOCHAR /;"	d
STAT_CLI_NOCOMP	./printer/ipp.h	/^#define STAT_CLI_NOCOMP /;"	d
STAT_CLI_NOPERM	./printer/ipp.h	/^#define STAT_CLI_NOPERM /;"	d
STAT_CLI_NOSCHM	./printer/ipp.h	/^#define STAT_CLI_NOSCHM /;"	d
STAT_CLI_NOTFND	./printer/ipp.h	/^#define STAT_CLI_NOTFND /;"	d
STAT_CLI_NOTPOS	./printer/ipp.h	/^#define STAT_CLI_NOTPOS /;"	d
STAT_CLI_NOTSUP	./printer/ipp.h	/^#define STAT_CLI_NOTSUP /;"	d
STAT_CLI_OBJGONE	./printer/ipp.h	/^#define STAT_CLI_OBJGONE /;"	d
STAT_CLI_TIMOUT	./printer/ipp.h	/^#define STAT_CLI_TIMOUT /;"	d
STAT_CLI_TOOBIG	./printer/ipp.h	/^#define STAT_CLI_TOOBIG /;"	d
STAT_CLI_TOOLNG	./printer/ipp.h	/^#define STAT_CLI_TOOLNG /;"	d
STAT_OK	./printer/ipp.h	/^#define STAT_OK /;"	d
STAT_OK_ATTRCON	./printer/ipp.h	/^#define STAT_OK_ATTRCON /;"	d
STAT_OK_ATTRIGN	./printer/ipp.h	/^#define STAT_OK_ATTRIGN /;"	d
STAT_SRV_BADVER	./printer/ipp.h	/^#define STAT_SRV_BADVER /;"	d
STAT_SRV_CANCEL	./printer/ipp.h	/^#define STAT_SRV_CANCEL /;"	d
STAT_SRV_DEVERR	./printer/ipp.h	/^#define STAT_SRV_DEVERR /;"	d
STAT_SRV_INTERN	./printer/ipp.h	/^#define STAT_SRV_INTERN /;"	d
STAT_SRV_NOMULTI	./printer/ipp.h	/^#define STAT_SRV_NOMULTI /;"	d
STAT_SRV_NOTSUP	./printer/ipp.h	/^#define STAT_SRV_NOTSUP /;"	d
STAT_SRV_REJECT	./printer/ipp.h	/^#define STAT_SRV_REJECT /;"	d
STAT_SRV_TMPERR	./printer/ipp.h	/^#define STAT_SRV_TMPERR /;"	d
STAT_SRV_TOOBUSY	./printer/ipp.h	/^#define STAT_SRV_TOOBUSY /;"	d
STAT_SRV_UNAVAIL	./printer/ipp.h	/^#define STAT_SRV_UNAVAIL /;"	d
Sigfunc	./include/apue.h	/^typedef	void	Sigfunc(int);	\/* for signal handlers *\/$/;"	t	typeref:typename:void ()(int)
TAG_BOOLEAN	./printer/ipp.h	/^#define TAG_BOOLEAN /;"	d
TAG_CHARSET	./printer/ipp.h	/^#define TAG_CHARSET /;"	d
TAG_DATETIME	./printer/ipp.h	/^#define TAG_DATETIME /;"	d
TAG_END_OF_ATTR	./printer/ipp.h	/^#define TAG_END_OF_ATTR /;"	d
TAG_ENUM	./printer/ipp.h	/^#define TAG_ENUM /;"	d
TAG_INTEGER	./printer/ipp.h	/^#define TAG_INTEGER /;"	d
TAG_INTRANGE	./printer/ipp.h	/^#define TAG_INTRANGE /;"	d
TAG_JOB_ATTR	./printer/ipp.h	/^#define TAG_JOB_ATTR /;"	d
TAG_KEYWORD	./printer/ipp.h	/^#define TAG_KEYWORD /;"	d
TAG_MIMETYPE	./printer/ipp.h	/^#define TAG_MIMETYPE /;"	d
TAG_NAMEWLANG	./printer/ipp.h	/^#define TAG_NAMEWLANG /;"	d
TAG_NAMEWOLANG	./printer/ipp.h	/^#define TAG_NAMEWOLANG /;"	d
TAG_NATULANG	./printer/ipp.h	/^#define TAG_NATULANG /;"	d
TAG_NONE	./printer/ipp.h	/^#define TAG_NONE /;"	d
TAG_OCTSTR	./printer/ipp.h	/^#define TAG_OCTSTR /;"	d
TAG_OPERATION_ATTR	./printer/ipp.h	/^#define TAG_OPERATION_ATTR /;"	d
TAG_PRINTER_ATTR	./printer/ipp.h	/^#define TAG_PRINTER_ATTR /;"	d
TAG_RESOLUTION	./printer/ipp.h	/^#define TAG_RESOLUTION /;"	d
TAG_TEXTWLANG	./printer/ipp.h	/^#define TAG_TEXTWLANG /;"	d
TAG_TEXTWOLANG	./printer/ipp.h	/^#define TAG_TEXTWOLANG /;"	d
TAG_UNKNOWN	./printer/ipp.h	/^#define TAG_UNKNOWN /;"	d
TAG_UNSUPPORTED	./printer/ipp.h	/^#define TAG_UNSUPPORTED /;"	d
TAG_UNSUPP_ATTR	./printer/ipp.h	/^#define TAG_UNSUPP_ATTR /;"	d
TAG_URI	./printer/ipp.h	/^#define TAG_URI /;"	d
TAG_URISCHEME	./printer/ipp.h	/^#define TAG_URISCHEME /;"	d
TELL_CHILD	./ipc1/tellwait.c	/^TELL_CHILD(pid_t pid)$/;"	f	typeref:typename:void
TELL_CHILD	./lib/tellwait.c	/^TELL_CHILD(pid_t pid)$/;"	f	typeref:typename:void
TELL_PARENT	./ipc1/tellwait.c	/^TELL_PARENT(pid_t pid)$/;"	f	typeref:typename:void
TELL_PARENT	./lib/tellwait.c	/^TELL_PARENT(pid_t pid)$/;"	f	typeref:typename:void
TELL_WAIT	./ipc1/tellwait.c	/^TELL_WAIT(void)$/;"	f	typeref:typename:void
TELL_WAIT	./lib/tellwait.c	/^TELL_WAIT(void)$/;"	f	typeref:typename:void
TIMEOUT	./sockets/ruptime-dg.c	/^#define TIMEOUT	/;"	d	file:
TLOCK	./threads/Makefile	/^  TLOCK = timedlock$/;"	m
TLOCK	./threads/Makefile	/^  TLOCK =$/;"	m
TNUM	./threads/barrier.c	/^#define TNUM /;"	d	file:
TOK_ADD	./environ/cmd1.c	/^#define	TOK_ADD	/;"	d	file:
TOK_ADD	./environ/cmd2.c	/^#define	TOK_ADD	/;"	d	file:
TOUT	./threadctl/Makefile	/^  TOUT = timeout.o$/;"	m
TOUT	./threadctl/Makefile	/^TOUT =$/;"	m
UNUSED	./advio/rot13c2.c	/^	UNUSED = 0,$/;"	e	enum:rwop	file:
UNUSED	./advio/rot13c2.c.in	/^	UNUSED = 0,$/;"	e	enum:rwop	file:
USECTONSEC	./threadctl/timeout.c	/^#define USECTONSEC /;"	d	file:
USERNM_MAX	./printer/print.h	/^#define USERNM_MAX /;"	d
WAIT_CHILD	./ipc1/tellwait.c	/^WAIT_CHILD(void)$/;"	f	typeref:typename:void
WAIT_CHILD	./lib/tellwait.c	/^WAIT_CHILD(void)$/;"	f	typeref:typename:void
WAIT_PARENT	./ipc1/tellwait.c	/^WAIT_PARENT(void)$/;"	f	typeref:typename:void
WAIT_PARENT	./lib/tellwait.c	/^WAIT_PARENT(void)$/;"	f	typeref:typename:void
WHITE	./lib/bufargs.c	/^#define	WHITE	/;"	d	file:
WRITE_PENDING	./advio/rot13c2.c	/^	WRITE_PENDING = 2$/;"	e	enum:rwop	file:
WRITE_PENDING	./advio/rot13c2.c.in	/^	WRITE_PENDING = 2$/;"	e	enum:rwop	file:
ZAP	./filedir/Makefile	/^	ZAP = zap$/;"	m
ZAP	./filedir/Makefile	/^	ZAP =$/;"	m
_APUE_DB_H	./db/apue_db.h	/^#define _APUE_DB_H$/;"	d
_APUE_H	./include/apue.h	/^#define	_APUE_H$/;"	d
_IPP_H	./printer/ipp.h	/^#define _IPP_H$/;"	d
_POSIX_C_SOURCE	./include/apue.h	/^#define _POSIX_C_SOURCE /;"	d
_PRINT_H	./printer/print.h	/^#define _PRINT_H$/;"	d
_XOPEN_SOURCE	./include/apue.h	/^#define _XOPEN_SOURCE /;"	d
__anon2e77ff37010a	./printer/printd.c	/^	union {$/;"	u	function:add_option	file:
__anon3a7333ee0108	./db/db.c	/^typedef struct {$/;"	s	file:
__anon8162fff4010a	./printer/ipp.h	/^	union {$/;"	u	struct:ipp_hdr
__anonad44fb700108	./ipc2/opend/opend.h	/^typedef struct {	\/* one Client struct per connected client *\/$/;"	s
__anonc8c5a5b20103	./lib/ttymodes.c	/^static enum { RESET, RAW, CBREAK }	ttystate = RESET;$/;"	g	file:
_base	./stdio/buf.c	/^#define _base /;"	d	file:
_db_alloc	./db/db.c	/^_db_alloc(int namelen)$/;"	f	typeref:typename:DB *	file:
_db_dodelete	./db/db.c	/^_db_dodelete(DB *db)$/;"	f	typeref:typename:void	file:
_db_find_and_lock	./db/db.c	/^_db_find_and_lock(DB *db, const char *key, int writelock)$/;"	f	typeref:typename:int	file:
_db_findfree	./db/db.c	/^_db_findfree(DB *db, int keylen, int datlen)$/;"	f	typeref:typename:int	file:
_db_free	./db/db.c	/^_db_free(DB *db)$/;"	f	typeref:typename:void	file:
_db_hash	./db/db.c	/^_db_hash(DB *db, const char *key)$/;"	f	typeref:typename:DBHASH	file:
_db_readdat	./db/db.c	/^_db_readdat(DB *db)$/;"	f	typeref:typename:char *	file:
_db_readidx	./db/db.c	/^_db_readidx(DB *db, off_t offset)$/;"	f	typeref:typename:off_t	file:
_db_readptr	./db/db.c	/^_db_readptr(DB *db, off_t offset)$/;"	f	typeref:typename:off_t	file:
_db_writedat	./db/db.c	/^_db_writedat(DB *db, const char *data, off_t offset, int whence)$/;"	f	typeref:typename:void	file:
_db_writeidx	./db/db.c	/^_db_writeidx(DB *db, const char *key,$/;"	f	typeref:typename:void	file:
_db_writeptr	./db/db.c	/^_db_writeptr(DB *db, off_t offset, off_t ptrval)$/;"	f	typeref:typename:void	file:
_flag	./stdio/buf.c	/^#define _flag /;"	d	file:
_ptr	./stdio/buf.c	/^#define _ptr /;"	d	file:
a	./exercises/goodexit.c	/^	int a, b, c, d;$/;"	m	struct:foo	typeref:typename:int	file:
a	./threads/badexit2.c	/^	int a, b, c, d;$/;"	m	struct:foo	typeref:typename:int	file:
abort	./signals/abort.c	/^abort(void)			\/* POSIX-style abort() function *\/$/;"	f	typeref:typename:void
ac_flag	./proc/pracct.c	/^#define ac_flag /;"	d	file:
acct	./proc/pracct.c	/^#define acct /;"	d	file:
add	./termios/ttyname.c	/^add(char *dirname)$/;"	f	typeref:typename:void	file:
add_job	./printer/printd.c	/^add_job(struct printreq *reqp, int32_t jobid)$/;"	f	typeref:typename:void
add_option	./printer/printd.c	/^add_option(char *cp, int tag, char *optname, char *optval)$/;"	f	typeref:typename:char *
add_worker	./printer/printd.c	/^add_worker(pthread_t tid, int sockfd)$/;"	f	typeref:typename:void
aiocb	./advio/rot13c2.c	/^	struct aiocb  aiocb;$/;"	m	struct:buf	typeref:struct:aiocb	file:
aiocb	./advio/rot13c2.c.in	/^	struct aiocb  aiocb;$/;"	m	struct:buf	typeref:struct:aiocb	file:
all	./Makefile	/^all:$/;"	t
all	./advio/Makefile	/^all:	$(PROGS) $(MOREPROGS) lockfile.o$/;"	t
all	./daemons/Makefile	/^all:	init.o reread.o reread2.o single.o$/;"	t
all	./datafiles/Makefile	/^all:	$(PROGS) getpwnam.o$/;"	t
all	./db/Makefile	/^all: libapue_db.so.1 t4 $(LIBMISC)$/;"	t
all	./environ/Makefile	/^all:	$(PROGS) opendata.o scope.o$/;"	t
all	./exercises/Makefile	/^all:	$(PROGS) asyncsocket.o $(FMEM) openmax.o sleep.o sleepus_poll.o sleepus_select.o $(GETPW)$/;"	t
all	./filedir/Makefile	/^all:	$(PROGS) $(MOREPROGS)$/;"	t
all	./fileio/Makefile	/^all:	$(PROGS) setfl.o$/;"	t
all	./intro/Makefile	/^all:	$(PROGS)$/;"	t
all	./ipc1/Makefile	/^all:	$(PROGS) popen.o slock.o tellwait.o$/;"	t
all	./ipc2/Makefile	/^all:	$(PROGS) $(FDPASS)$/;"	t
all	./ipc2/open.fe/Makefile	/^all:	$(PROGS)$/;"	t
all	./ipc2/open/Makefile	/^all:	$(PROGS)$/;"	t
all	./ipc2/opend.fe/Makefile	/^all:	$(PROGS)$/;"	t
all	./ipc2/opend/Makefile	/^all:	$(PROGS)$/;"	t
all	./lib/Makefile	/^all:	$(LIBMISC) sleep.o$/;"	t
all	./printer/Makefile	/^all:	$(PROGS) $/;"	t
all	./proc/Makefile	/^all:	$(PROGS) $(MOREPROGS) system.o $(ACCT)$/;"	t
all	./pty/Makefile	/^all:	$(PROGS)$/;"	t
all	./relation/Makefile	/^all:	$(PROGS)$/;"	t
all	./signals/Makefile	/^all:	$(PROGS) $(MOREPROGS) abort.o sleep1.o sleep2.o system.o $(CLD)$/;"	t
all	./sockets/makefile	/^all:	$(PROGS) $(MOREPROGS) clconn.o clconn2.o initsrv1.o initsrv2.o $/;"	t
all	./standards/Makefile	/^all:	$(PROGS)$/;"	t
all	./stdio/Makefile	/^all:	$(PROGS) $(MEMSTR)$/;"	t
all	./termios/Makefile	/^all:	$(PROGS) ctermid.o getpass.o isatty.o ttyname.o$/;"	t
all	./threadctl/Makefile	/^all:	$(PROGS) detach.o getenv1.o getenv2.o getenv3.o $(TOUT)$/;"	t
all	./threads/Makefile	/^all:	$(PROGS) condvar.o maketimeout.o mutex1.o mutex2.o mutex3.o rwlock.o $(TLOCK) $(BAR)$/;"	t
already_running	./daemons/single.c	/^already_running(void)$/;"	f	typeref:typename:int
array	./ipc1/tshm.c	/^char	array[ARRAY_SIZE];	\/* uninitialized data = bss *\/$/;"	v	typeref:typename:char[]
array	./lib/semaph.c	/^		unsigned short		*array;$/;"	m	union:sem_create::semun	typeref:typename:unsigned short *	file:
attr	./threadctl/timeout.c	/^pthread_mutexattr_t attr;$/;"	v	typeref:typename:pthread_mutexattr_t
attr_group	./printer/ipp.h	/^	char    attr_group[1];	\/* start of optional attributes group *\/$/;"	m	struct:ipp_hdr	typeref:typename:char[1]
b	./exercises/goodexit.c	/^	int a, b, c, d;$/;"	m	struct:foo	typeref:typename:int	file:
b	./threads/badexit2.c	/^	int a, b, c, d;$/;"	m	struct:foo	typeref:typename:int	file:
b	./threads/barrier.c	/^pthread_barrier_t b;$/;"	v	typeref:typename:pthread_barrier_t
buf	./advio/nonblockw.c	/^char	buf[500000];$/;"	v	typeref:typename:char[500000]
buf	./advio/rot13a.c	/^unsigned char buf[BSZ];$/;"	v	typeref:typename:unsigned char[]
buf	./advio/rot13c2.c	/^struct buf {$/;"	s	file:
buf	./advio/rot13c2.c.in	/^struct buf {$/;"	s	file:
buf	./exercises/fmemopen.c	/^	char	*buf;	\/* in-memory buffer *\/$/;"	m	struct:memstream	typeref:typename:char *	file:
buf	./lib/semaph.c	/^		struct semid_ds	*buf;$/;"	m	union:sem_create::semun	typeref:struct:semid_ds *	file:
buf	./proc/fork1.c	/^char	buf[] = "a write to stdout\\n";$/;"	v	typeref:typename:char[]
buf1	./fileio/hole.c	/^char	buf1[] = "abcdefghij";$/;"	v	typeref:typename:char[]
buf2	./fileio/hole.c	/^char	buf2[] = "ABCDEFGHIJ";$/;"	v	typeref:typename:char[]
buf_args	./lib/bufargs.c	/^buf_args(char *buf, int (*optfunc)(int, char **))$/;"	f	typeref:typename:int
buffer_size	./stdio/buf.c	/^buffer_size(FILE *fp)$/;"	f	typeref:typename:int
bufs	./advio/rot13c2.c	/^struct buf bufs[NBUF];$/;"	v	typeref:struct:buf[]
bufs	./advio/rot13c2.c.in	/^struct buf bufs[NBUF];$/;"	v	typeref:struct:buf[]
build_qonstart	./printer/printd.c	/^build_qonstart(void)$/;"	f	typeref:typename:void
c	./exercises/goodexit.c	/^	int a, b, c, d;$/;"	m	struct:foo	typeref:typename:int	file:
c	./printer/printd.c	/^		char c[2];$/;"	m	union:add_option::__anon2e77ff37010a	typeref:typename:char[2]	file:
c	./threads/badexit2.c	/^	int a, b, c, d;$/;"	m	struct:foo	typeref:typename:int	file:
canjump	./signals/mask.c	/^static volatile sig_atomic_t	canjump;$/;"	v	typeref:typename:volatile sig_atomic_t	file:
chainoff	./db/db.c	/^  off_t  chainoff; \/* offset of hash chain for this index record *\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:off_t	file:
charatatime	./proc/tellwait1.c	/^charatatime(char *str)$/;"	f	typeref:typename:void	file:
charatatime	./proc/tellwait2.c	/^charatatime(char *str)$/;"	f	typeref:typename:void	file:
checktime	./proc/nice.c	/^checktime(char *str)$/;"	f	typeref:typename:void
child	./threadctl/atfork.c	/^child(void)$/;"	f	typeref:typename:void
childpid	./ipc1/popen.c	/^static pid_t	*childpid = NULL;$/;"	v	typeref:typename:pid_t *	file:
childpid	./lib/popen.c	/^static pid_t	*childpid = NULL;$/;"	v	typeref:typename:pid_t *	file:
clean	./Makefile	/^clean:$/;"	t
clean	./advio/Makefile	/^clean:$/;"	t
clean	./daemons/Makefile	/^clean:$/;"	t
clean	./datafiles/Makefile	/^clean:$/;"	t
clean	./db/Makefile	/^clean:$/;"	t
clean	./environ/Makefile	/^clean:$/;"	t
clean	./exercises/Makefile	/^clean:$/;"	t
clean	./filedir/Makefile	/^clean:$/;"	t
clean	./fileio/Makefile	/^clean:$/;"	t
clean	./intro/Makefile	/^clean:$/;"	t
clean	./ipc1/Makefile	/^clean:$/;"	t
clean	./ipc2/Makefile	/^clean:$/;"	t
clean	./ipc2/open.fe/Makefile	/^clean:$/;"	t
clean	./ipc2/open/Makefile	/^clean:$/;"	t
clean	./ipc2/opend.fe/Makefile	/^clean:$/;"	t
clean	./ipc2/opend/Makefile	/^clean:$/;"	t
clean	./lib/Makefile	/^clean:$/;"	t
clean	./printer/Makefile	/^clean:$/;"	t
clean	./proc/Makefile	/^clean:$/;"	t
clean	./pty/Makefile	/^clean:$/;"	t
clean	./relation/Makefile	/^clean:$/;"	t
clean	./signals/Makefile	/^clean:$/;"	t
clean	./sockets/makefile	/^clean:$/;"	t
clean	./standards/Makefile	/^clean:$/;"	t
clean	./stdio/Makefile	/^clean:$/;"	t
clean	./termios/Makefile	/^clean:$/;"	t
clean	./threadctl/Makefile	/^clean:$/;"	t
clean	./threads/Makefile	/^clean:$/;"	t
cleanup	./termios/ttyname.c	/^cleanup(void)$/;"	f	typeref:typename:void	file:
cleanup	./threads/cleanup.c	/^cleanup(void *arg)$/;"	f	typeref:typename:void
cli_args	./ipc2/opend.fe/cliargs.c	/^cli_args(int argc, char **argv)$/;"	f	typeref:typename:int
cli_args	./ipc2/opend/cliargs.c	/^cli_args(int argc, char **argv)$/;"	f	typeref:typename:int
cli_conn	./lib/cliconn.c	/^cli_conn(const char *name)$/;"	f	typeref:typename:int
client	./ipc2/opend/main.c	/^Client	*client = NULL;$/;"	v	typeref:typename:Client *
client_add	./ipc2/opend/client.c	/^client_add(int fd, uid_t uid)$/;"	f	typeref:typename:int
client_alloc	./ipc2/opend/client.c	/^client_alloc(void)		\/* alloc more entries in the client[] array *\/$/;"	f	typeref:typename:void	file:
client_cleanup	./printer/printd.c	/^client_cleanup(void *arg)$/;"	f	typeref:typename:void
client_del	./ipc2/opend/client.c	/^client_del(int fd)$/;"	f	typeref:typename:void
client_size	./ipc2/opend/main.c	/^int		 debug, oflag, client_size, log_to_stderr;$/;"	v	typeref:typename:int
client_thread	./printer/printd.c	/^client_thread(void *arg)$/;"	f	typeref:typename:void *
clock_gettime	./threadctl/timeout.c	/^clock_gettime(int id, struct timespec *tsp)$/;"	f	typeref:typename:void
clock_nanosleep	./threadctl/timeout.c	/^#define clock_nanosleep(/;"	d	file:
clr_fl	./lib/clrfl.c	/^clr_fl(int fd, int flags)$/;"	f	typeref:typename:void
clrasync	./exercises/asyncsocket.c	/^clrasync(int sockfd)$/;"	f	typeref:typename:int
cmd_add	./environ/cmd1.c	/^cmd_add(void)$/;"	f	typeref:typename:void
cmd_add	./environ/cmd2.c	/^cmd_add(void)$/;"	f	typeref:typename:...void
cmptr	./ipc2/recvfd2.c	/^static struct cmsghdr	*cmptr = NULL;		\/* malloc'ed first time *\/$/;"	v	typeref:struct:cmsghdr *	file:
cmptr	./ipc2/sendfd2.c	/^static struct cmsghdr	*cmptr = NULL;	\/* malloc'ed first time *\/$/;"	v	typeref:struct:cmsghdr *	file:
cmptr	./lib/recvfd.c	/^static struct cmsghdr	*cmptr = NULL;		\/* malloc'ed first time *\/$/;"	v	typeref:struct:cmsghdr *	file:
cmptr	./lib/sendfd.c	/^static struct cmsghdr	*cmptr = NULL;	\/* malloc'ed first time *\/$/;"	v	typeref:struct:cmsghdr *	file:
cnt_delerr	./db/db.c	/^  COUNT  cnt_delerr;   \/* delete error *\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:COUNT	file:
cnt_delok	./db/db.c	/^  COUNT  cnt_delok;    \/* delete OK *\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:COUNT	file:
cnt_fetcherr	./db/db.c	/^  COUNT  cnt_fetcherr; \/* fetch error *\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:COUNT	file:
cnt_fetchok	./db/db.c	/^  COUNT  cnt_fetchok;  \/* fetch OK *\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:COUNT	file:
cnt_nextrec	./db/db.c	/^  COUNT  cnt_nextrec;  \/* nextrec *\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:COUNT	file:
cnt_stor1	./db/db.c	/^  COUNT  cnt_stor1;    \/* store: DB_INSERT, no empty, appended *\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:COUNT	file:
cnt_stor2	./db/db.c	/^  COUNT  cnt_stor2;    \/* store: DB_INSERT, found empty, reused *\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:COUNT	file:
cnt_stor3	./db/db.c	/^  COUNT  cnt_stor3;    \/* store: DB_REPLACE, diff len, appended *\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:COUNT	file:
cnt_stor4	./db/db.c	/^  COUNT  cnt_stor4;    \/* store: DB_REPLACE, same len, overwrote *\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:COUNT	file:
cnt_storerr	./db/db.c	/^  COUNT  cnt_storerr;  \/* store error *\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:COUNT	file:
complong	./threads/barrier.c	/^complong(const void *arg1, const void *arg2)$/;"	f	typeref:typename:int
compt2ulong	./proc/pracct.c	/^compt2ulong(comp_t comptime)	\/* convert comp_t to unsigned long *\/$/;"	f	typeref:typename:unsigned long	file:
conf	./standards/Makefile	/^conf:	conf.c$/;"	t
conf.c	./standards/Makefile	/^conf.c:	makeconf.awk sysconf.sym pathconf.sym$/;"	t
configlock	./printer/printd.c	/^pthread_mutex_t		configlock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t
connect_retry	./sockets/clconn.c	/^connect_retry(int sockfd, const struct sockaddr *addr, socklen_t alen)$/;"	f	typeref:typename:int
connect_retry	./sockets/clconn2.c	/^connect_retry(int domain, int type, int protocol,$/;"	f	typeref:typename:int
count	./proc/nice.c	/^unsigned long long count;$/;"	v	typeref:typename:unsigned long long
csopen	./ipc2/open.fe/open.c	/^csopen(char *name, int oflag)$/;"	f	typeref:typename:int
csopen	./ipc2/open/open.c	/^csopen(char *name, int oflag)$/;"	f	typeref:typename:int
ctermid	./termios/ctermid.c	/^ctermid(char *str)$/;"	f	typeref:typename:char *
ctermid_name	./termios/ctermid.c	/^static char	ctermid_name[L_ctermid];$/;"	v	typeref:typename:char[]	file:
curpos	./exercises/fmemopen.c	/^	size_t	curpos;	\/* current position in buffer *\/$/;"	m	struct:memstream	typeref:typename:size_t	file:
d	./exercises/goodexit.c	/^	int a, b, c, d;$/;"	m	struct:foo	typeref:typename:int	file:
d	./threads/badexit2.c	/^	int a, b, c, d;$/;"	m	struct:foo	typeref:typename:int	file:
d_name	./termios/ttyname.c	/^	char			*d_name;$/;"	m	struct:devdir	typeref:typename:char *	file:
d_next	./termios/ttyname.c	/^	struct devdir	*d_next;$/;"	m	struct:devdir	typeref:struct:devdir *	file:
daemonize	./daemons/init.c	/^daemonize(const char *cmd)$/;"	f	typeref:typename:void
daemonize	./lib/daemonize.c	/^daemonize(const char *cmd)$/;"	f	typeref:typename:void
data	./advio/rot13c2.c	/^	unsigned char data[BSZ];$/;"	m	struct:buf	typeref:typename:unsigned char[]	file:
data	./advio/rot13c2.c.in	/^	unsigned char data[BSZ];$/;"	m	struct:buf	typeref:typename:unsigned char[]	file:
datbuf	./db/db.c	/^  char  *datbuf; \/* malloc'ed buffer for data record*\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:char *	file:
datfd	./db/db.c	/^  int    datfd;  \/* fd for data file *\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:int	file:
datlen	./db/db.c	/^  size_t datlen; \/* length of data record *\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:size_t	file:
datoff	./db/db.c	/^  off_t  datoff; \/* offset in data file of data record *\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:off_t	file:
db_close	./db/db.c	/^db_close(DBHANDLE h)$/;"	f	typeref:typename:void
db_delete	./db/db.c	/^db_delete(DBHANDLE h, const char *key)$/;"	f	typeref:typename:int
db_fetch	./db/db.c	/^db_fetch(DBHANDLE h, const char *key)$/;"	f	typeref:typename:char *
db_nextrec	./db/db.c	/^db_nextrec(DBHANDLE h, char *key)$/;"	f	typeref:typename:char *
db_open	./db/db.c	/^db_open(const char *pathname, int oflag, ...)$/;"	f	typeref:typename:DBHANDLE
db_rewind	./db/db.c	/^db_rewind(DBHANDLE h)$/;"	f	typeref:typename:void
db_store	./db/db.c	/^db_store(DBHANDLE h, const char *key, const char *data, int flag)$/;"	f	typeref:typename:int
debug	./ipc2/opend/main.c	/^int		 debug, oflag, client_size, log_to_stderr;$/;"	v	typeref:typename:int
devdir	./termios/ttyname.c	/^struct devdir {$/;"	s	file:
do_cmd	./proc/times1.c	/^do_cmd(char *cmd)		\/* execute and time the "cmd" *\/$/;"	f	typeref:typename:void	file:
do_driver	./pty/driver.c	/^do_driver(char *driver)$/;"	f	typeref:typename:void
do_line	./environ/cmd1.c	/^do_line(char *ptr)		\/* process one line of input *\/$/;"	f	typeref:typename:void
doit	./environ/getrlimit.c	/^#define	doit(/;"	d	file:
dopath	./filedir/ftw8.c	/^dopath(Myfunc* func)$/;"	f	typeref:typename:int	file:
end	./proc/nice.c	/^struct timeval end;$/;"	v	typeref:struct:timeval
enqueue_msg	./threads/condvar.c	/^enqueue_msg(struct msg *mp)$/;"	f	typeref:typename:void
env_alrm	./signals/read2.c	/^static jmp_buf	env_alrm;$/;"	v	typeref:typename:jmp_buf	file:
env_alrm	./signals/sleep2.c	/^static jmp_buf	env_alrm;$/;"	v	typeref:typename:jmp_buf	file:
env_init	./proc/exec1.c	/^char	*env_init[] = { "USER=unknown", "PATH=\/tmp", NULL };$/;"	v	typeref:typename:char * []
env_mutex	./threadctl/getenv2.c	/^pthread_mutex_t env_mutex;$/;"	v	typeref:typename:pthread_mutex_t
env_mutex	./threadctl/getenv3.c	/^pthread_mutex_t env_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t
envbuf	./threadctl/getenv1.c	/^static char envbuf[MAXSTRINGSZ];$/;"	v	typeref:typename:char[]	file:
err_cont	./lib/error.c	/^err_cont(int error, const char *fmt, ...)$/;"	f	typeref:typename:void
err_doit	./lib/error.c	/^err_doit(int errnoflag, int error, const char *fmt, va_list ap)$/;"	f	typeref:typename:void	file:
err_dump	./lib/error.c	/^err_dump(const char *fmt, ...)$/;"	f	typeref:typename:void
err_exit	./lib/error.c	/^err_exit(int error, const char *fmt, ...)$/;"	f	typeref:typename:void
err_msg	./lib/error.c	/^err_msg(const char *fmt, ...)$/;"	f	typeref:typename:void
err_quit	./lib/error.c	/^err_quit(const char *fmt, ...)$/;"	f	typeref:typename:void
err_ret	./lib/error.c	/^err_ret(const char *fmt, ...)$/;"	f	typeref:typename:void
err_sys	./lib/error.c	/^err_sys(const char *fmt, ...)$/;"	f	typeref:typename:void
errmsg	./ipc2/opend.fe/main.c	/^char	 errmsg[MAXLINE];$/;"	v	typeref:typename:char[]
errmsg	./ipc2/opend/main.c	/^char	 errmsg[MAXLINE];$/;"	v	typeref:typename:char[]
f1	./environ/scope.c	/^f1(int val)$/;"	f	typeref:typename:int
f1	./environ/testjmp.c	/^f1(int i, int j, int k, int l)$/;"	f	typeref:typename:void	file:
f1	./exercises/vfork3.c	/^f1(void)$/;"	f	typeref:typename:void	file:
f2	./environ/testjmp.c	/^f2(void)$/;"	f	typeref:typename:void	file:
f2	./exercises/vfork3.c	/^f2(void)$/;"	f	typeref:typename:void	file:
f_count	./threads/mutex1.c	/^	int             f_count;$/;"	m	struct:foo	typeref:typename:int	file:
f_count	./threads/mutex2.c	/^	int             f_count;$/;"	m	struct:foo	typeref:typename:int	file:
f_count	./threads/mutex3.c	/^	int             f_count; \/* protected by hashlock *\/$/;"	m	struct:foo	typeref:typename:int	file:
f_id	./threads/mutex1.c	/^	int             f_id;$/;"	m	struct:foo	typeref:typename:int	file:
f_id	./threads/mutex2.c	/^	int             f_id;$/;"	m	struct:foo	typeref:typename:int	file:
f_id	./threads/mutex3.c	/^	int             f_id;$/;"	m	struct:foo	typeref:typename:int	file:
f_lock	./threads/mutex1.c	/^	pthread_mutex_t f_lock;$/;"	m	struct:foo	typeref:typename:pthread_mutex_t	file:
f_lock	./threads/mutex2.c	/^	pthread_mutex_t f_lock;$/;"	m	struct:foo	typeref:typename:pthread_mutex_t	file:
f_lock	./threads/mutex3.c	/^	pthread_mutex_t f_lock;$/;"	m	struct:foo	typeref:typename:pthread_mutex_t	file:
f_next	./threads/mutex2.c	/^	struct foo     *f_next; \/* protected by hashlock *\/$/;"	m	struct:foo	typeref:struct:foo *	file:
f_next	./threads/mutex3.c	/^	struct foo     *f_next; \/* protected by hashlock *\/$/;"	m	struct:foo	typeref:struct:foo *	file:
fd	./exercises/pollmsg2.c	/^	int				fd;$/;"	m	struct:threadinfo	typeref:typename:int	file:
fd	./ipc2/opend/opend.h	/^  int	fd;			\/* fd, or -1 if available *\/$/;"	m	struct:__anonad44fb700108	typeref:typename:int
fd	./ipc2/pollmsg.c	/^	int fd;$/;"	m	struct:threadinfo	typeref:typename:int	file:
fd_pipe	./lib/spipe.c	/^fd_pipe(int fd[2])$/;"	f	typeref:typename:int
fh	./threads/mutex2.c	/^struct foo *fh[NHASH];$/;"	v	typeref:struct:foo * []
fh	./threads/mutex3.c	/^struct foo *fh[NHASH];$/;"	v	typeref:struct:foo * []
find_end	./exercises/fmemopen.c	/^find_end(char *buf, size_t len)$/;"	f	typeref:typename:off_t	file:
flags	./exercises/fmemopen.c	/^	int		flags;	\/* see below *\/$/;"	m	struct:memstream	typeref:typename:int	file:
flags	./printer/print.h	/^	uint32_t flags;				\/* see below *\/$/;"	m	struct:printreq	typeref:typename:uint32_t
fmemopen	./exercises/fmemopen.c	/^fmemopen(void *__restrict buf, size_t size,$/;"	f	typeref:typename:FILE *
foo	./exercises/goodexit.c	/^struct foo {$/;"	s	file:
foo	./threads/badexit2.c	/^struct foo {$/;"	s	file:
foo	./threads/mutex1.c	/^struct foo {$/;"	s	file:
foo	./threads/mutex2.c	/^struct foo {$/;"	s	file:
foo	./threads/mutex3.c	/^struct foo {$/;"	s	file:
foo_alloc	./threads/mutex1.c	/^foo_alloc(int id) \/* allocate the object *\/$/;"	f	typeref:struct:foo *
foo_alloc	./threads/mutex2.c	/^foo_alloc(int id) \/* allocate the object *\/$/;"	f	typeref:struct:foo *
foo_alloc	./threads/mutex3.c	/^foo_alloc(int id) \/* allocate the object *\/$/;"	f	typeref:struct:foo *
foo_find	./threads/mutex2.c	/^foo_find(int id) \/* find an existing object *\/$/;"	f	typeref:struct:foo *
foo_find	./threads/mutex3.c	/^foo_find(int id) \/* find an existing object *\/$/;"	f	typeref:struct:foo *
foo_hold	./threads/mutex1.c	/^foo_hold(struct foo *fp) \/* add a reference to the object *\/$/;"	f	typeref:typename:void
foo_hold	./threads/mutex2.c	/^foo_hold(struct foo *fp) \/* add a reference to the object *\/$/;"	f	typeref:typename:void
foo_hold	./threads/mutex3.c	/^foo_hold(struct foo *fp) \/* add a reference to the object *\/$/;"	f	typeref:typename:void
foo_rele	./threads/mutex1.c	/^foo_rele(struct foo *fp) \/* release a reference to the object *\/$/;"	f	typeref:typename:void
foo_rele	./threads/mutex2.c	/^foo_rele(struct foo *fp) \/* release a reference to the object *\/$/;"	f	typeref:typename:void
foo_rele	./threads/mutex3.c	/^foo_rele(struct foo *fp) \/* release a reference to the object *\/$/;"	f	typeref:typename:void
ftw8	./filedir/Makefile	/^ftw8:	ftw8.c $(LIBAPUE)$/;"	t
fullpath	./filedir/ftw8.c	/^static char	*fullpath;		\/* contains full pathname for every file *\/$/;"	v	typeref:typename:char *	file:
get_newjobno	./printer/printd.c	/^get_newjobno(void)$/;"	f	typeref:typename:int32_t
get_printaddr	./printer/util.c	/^get_printaddr(void)$/;"	f	typeref:struct:addrinfo *
get_printserver	./printer/util.c	/^get_printserver(void)$/;"	f	typeref:typename:char *
get_token	./environ/cmd1.c	/^get_token(void)$/;"	f	typeref:typename:int
getaddrlist	./printer/util.c	/^getaddrlist(const char *host, const char *service,$/;"	f	typeref:typename:int
getenv	./threadctl/getenv1.c	/^getenv(const char *name)$/;"	f	typeref:typename:char *
getenv	./threadctl/getenv3.c	/^getenv(const char *name)$/;"	f	typeref:typename:char *
getenv_r	./threadctl/getenv2.c	/^getenv_r(const char *name, char *buf, int buflen)$/;"	f	typeref:typename:int
getpass	./termios/getpass.c	/^getpass(const char *prompt)$/;"	f	typeref:typename:char *
getpwnam	./datafiles/getpwnam.c	/^getpwnam(const char *name)$/;"	f	typeref:struct:passwd *
globval	./environ/testjmp.c	/^static int		globval;$/;"	v	typeref:typename:int	file:
globvar	./proc/fork1.c	/^int		globvar = 6;		\/* external variable in initialized data *\/$/;"	v	typeref:typename:int
globvar	./proc/vfork1.c	/^int		globvar = 6;		\/* external variable in initialized data *\/$/;"	v	typeref:typename:int
grow_pollfd	./ipc2/opend/loop.poll.c	/^grow_pollfd(struct pollfd *pfd, int *maxfd)$/;"	f	typeref:struct:pollfd *	file:
handle_request	./ipc2/opend.fe/request.c	/^handle_request(char *buf, int nread, int fd)$/;"	f	typeref:typename:void
handle_request	./ipc2/opend/request.c	/^handle_request(char *buf, int nread, int clifd, uid_t uid)$/;"	f	typeref:typename:void
hashlock	./threads/mutex2.c	/^pthread_mutex_t hashlock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t
hashlock	./threads/mutex3.c	/^pthread_mutex_t hashlock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t
hashoff	./db/db.c	/^  off_t  hashoff;  \/* offset in index file of hash table *\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:off_t	file:
head	./termios/ttyname.c	/^static struct devdir	*head;$/;"	v	typeref:struct:devdir *	file:
heapsort	./threads/barrier.c	/^#define heapsort /;"	d	file:
helper	./exercises/pollmsg2.c	/^helper(void *arg)$/;"	f	typeref:typename:void *
helper	./ipc2/pollmsg.c	/^helper(void *arg)$/;"	f	typeref:typename:void *
idxbuf	./db/db.c	/^  char  *idxbuf; \/* malloc'ed buffer for index record *\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:char *	file:
idxfd	./db/db.c	/^  int    idxfd;  \/* fd for index file *\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:int	file:
idxlen	./db/db.c	/^  size_t idxlen; \/* length of index record *\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:size_t	file:
idxoff	./db/db.c	/^  off_t  idxoff; \/* offset in index file of index record *\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:off_t	file:
init_done	./threadctl/getenv2.c	/^static pthread_once_t init_done = PTHREAD_ONCE_INIT;$/;"	v	typeref:typename:pthread_once_t	file:
init_done	./threadctl/getenv3.c	/^static pthread_once_t init_done = PTHREAD_ONCE_INIT;$/;"	v	typeref:typename:pthread_once_t	file:
init_printer	./printer/printd.c	/^init_printer(void)$/;"	f	typeref:typename:void
init_request	./printer/printd.c	/^init_request(void)$/;"	f	typeref:typename:void
initserver	./sockets/initsrv1.c	/^initserver(int type, const struct sockaddr *addr, socklen_t alen,$/;"	f	typeref:typename:int
initserver	./sockets/initsrv2.c	/^initserver(int type, const struct sockaddr *addr, socklen_t alen,$/;"	f	typeref:typename:int
ipp_hdr	./printer/ipp.h	/^struct ipp_hdr {$/;"	s
is_linebuffered	./stdio/buf.c	/^is_linebuffered(FILE *fp)$/;"	f	typeref:typename:int
is_read_lockable	./include/apue.h	/^#define	is_read_lockable(/;"	d
is_unbuffered	./stdio/buf.c	/^is_unbuffered(FILE *fp)$/;"	f	typeref:typename:int
is_write_lockable	./include/apue.h	/^#define	is_write_lockable(/;"	d
isatty	./termios/isatty.c	/^isatty(int fd)$/;"	f	typeref:typename:int
j_id	./threads/rwlock.c	/^	pthread_t   j_id;   \/* tells which thread handles this job *\/$/;"	m	struct:job	typeref:typename:pthread_t	file:
j_next	./threads/rwlock.c	/^	struct job *j_next;$/;"	m	struct:job	typeref:struct:job *	file:
j_prev	./threads/rwlock.c	/^	struct job *j_prev;$/;"	m	struct:job	typeref:struct:job *	file:
jmpbuf	./signals/mask.c	/^static sigjmp_buf				jmpbuf;$/;"	v	typeref:typename:sigjmp_buf	file:
jmpbuffer	./environ/cmd2.c	/^jmp_buf	jmpbuffer;$/;"	v	typeref:typename:jmp_buf
jmpbuffer	./environ/testjmp.c	/^static jmp_buf	jmpbuffer;$/;"	v	typeref:typename:jmp_buf	file:
job	./printer/printd.c	/^struct job {$/;"	s	file:
job	./threads/rwlock.c	/^struct job {$/;"	s	file:
job_append	./threads/rwlock.c	/^job_append(struct queue *qp, struct job *jp)$/;"	f	typeref:typename:void
job_find	./threads/rwlock.c	/^job_find(struct queue *qp, pthread_t id)$/;"	f	typeref:struct:job *
job_insert	./threads/rwlock.c	/^job_insert(struct queue *qp, struct job *jp)$/;"	f	typeref:typename:void
job_remove	./threads/rwlock.c	/^job_remove(struct queue *qp, struct job *jp)$/;"	f	typeref:typename:void
jobfd	./printer/printd.c	/^int					jobfd;$/;"	v	typeref:typename:int
jobhead	./printer/printd.c	/^struct job				*jobhead, *jobtail;$/;"	v	typeref:struct:job *
jobid	./printer/print.h	/^	uint32_t jobid;				\/* job ID *\/$/;"	m	struct:printresp	typeref:typename:uint32_t
jobid	./printer/printd.c	/^	int32_t          jobid;		\/* job ID *\/$/;"	m	struct:job	typeref:typename:int32_t	file:
joblock	./printer/printd.c	/^pthread_mutex_t		joblock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t
jobnm	./printer/print.h	/^	char jobnm[JOBNM_MAX];		\/* job's name *\/$/;"	m	struct:printreq	typeref:typename:char[]
jobtail	./printer/printd.c	/^struct job				*jobhead, *jobtail;$/;"	v	typeref:struct:job *
jobwait	./printer/printd.c	/^pthread_cond_t			jobwait = PTHREAD_COND_INITIALIZER;$/;"	v	typeref:typename:pthread_cond_t
key	./threadctl/getenv3.c	/^static pthread_key_t key;$/;"	v	typeref:typename:pthread_key_t	file:
kill_workers	./printer/printd.c	/^kill_workers(void)$/;"	f	typeref:typename:void
last	./advio/rot13c2.c	/^	int           last;$/;"	m	struct:buf	typeref:typename:int	file:
last	./advio/rot13c2.c.in	/^	int           last;$/;"	m	struct:buf	typeref:typename:int	file:
len	./exercises/pollmsg2.c	/^	int				len;$/;"	m	struct:threadinfo	typeref:typename:int	file:
libapue_db.a	./db/Makefile	/^libapue_db.a:	$(COMM_OBJ) $(LIBAPUE)$/;"	t
libapue_db.so.1	./db/Makefile	/^libapue_db.so.1:	db.c $(LIBAPUE)$/;"	t
lock	./threadctl/suspend.c	/^pthread_mutex_t lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t
lock1	./threadctl/atfork.c	/^pthread_mutex_t lock1 = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t
lock2	./threadctl/atfork.c	/^pthread_mutex_t lock2 = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t
lock_reg	./lib/lockreg.c	/^lock_reg(int fd, int cmd, int type, off_t offset, int whence, off_t len)$/;"	f	typeref:typename:int
lock_test	./lib/locktest.c	/^lock_test(int fd, int type, off_t offset, int whence, off_t len)$/;"	f	typeref:typename:pid_t
lockabyte	./advio/deadlock.c	/^lockabyte(const char *name, int fd, off_t offset)$/;"	f	typeref:typename:void	file:
lockfile	./advio/lockfile.c	/^lockfile(int fd)$/;"	f	typeref:typename:int
log_doit	./lib/errorlog.c	/^log_doit(int errnoflag, int error, int priority, const char *fmt,$/;"	f	typeref:typename:void	file:
log_exit	./lib/errorlog.c	/^log_exit(int error, const char *fmt, ...)$/;"	f	typeref:typename:void
log_msg	./lib/errorlog.c	/^log_msg(const char *fmt, ...)$/;"	f	typeref:typename:void
log_open	./lib/errorlog.c	/^log_open(const char *ident, int option, int facility)$/;"	f	typeref:typename:void
log_quit	./lib/errorlog.c	/^log_quit(const char *fmt, ...)$/;"	f	typeref:typename:void
log_ret	./lib/errorlog.c	/^log_ret(const char *fmt, ...)$/;"	f	typeref:typename:void
log_sys	./lib/errorlog.c	/^log_sys(const char *fmt, ...)$/;"	f	typeref:typename:void
log_to_stderr	./ipc2/opend/main.c	/^int		 debug, oflag, client_size, log_to_stderr;$/;"	v	typeref:typename:int
log_to_stderr	./printer/print.c	/^int log_to_stderr = 1;$/;"	v	typeref:typename:int
log_to_stderr	./printer/printd.c	/^int					log_to_stderr = 0;$/;"	v	typeref:typename:int
loop	./ipc2/opend/loop.poll.c	/^loop(void)$/;"	f	typeref:typename:void
loop	./ipc2/opend/loop.select.c	/^loop(void)$/;"	f	typeref:typename:void
loop	./pty/loop.c	/^loop(int ptym, int ignoreeof)$/;"	f	typeref:typename:void
m	./exercises/pollmsg2.c	/^	struct mymesg	m;$/;"	m	struct:threadinfo	typeref:struct:mymesg	file:
m_next	./threads/condvar.c	/^	struct msg *m_next;$/;"	m	struct:msg	typeref:struct:msg *	file:
main	./advio/deadlock.c	/^main(void)$/;"	f	typeref:typename:int
main	./advio/mandatory.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./advio/mcopy2.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./advio/nonblockw.c	/^main(void)$/;"	f	typeref:typename:int
main	./advio/rot13a.c	/^main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	./advio/rot13c2.c	/^main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	./advio/rot13c2.c.in	/^main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	./daemons/reread.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./daemons/reread2.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./datafiles/strftime.c	/^main(void)$/;"	f	typeref:typename:int
main	./db/t4.c	/^main(void)$/;"	f	typeref:typename:int
main	./environ/cmd1.c	/^main(void)$/;"	f	typeref:typename:int
main	./environ/cmd2.c	/^main(void)$/;"	f	typeref:typename:int
main	./environ/doatexit.c	/^main(void)$/;"	f	typeref:typename:int
main	./environ/echoarg.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./environ/getrlimit.c	/^main(void)$/;"	f	typeref:typename:int
main	./environ/hello1.c	/^main()$/;"	f
main	./environ/testjmp.c	/^main(void)$/;"	f	typeref:typename:int
main	./exercises/bo.c	/^main(void)$/;"	f	typeref:typename:int
main	./exercises/fifo1.c	/^main(void)$/;"	f	typeref:typename:int
main	./exercises/getlogin.c	/^main(void)$/;"	f	typeref:typename:int
main	./exercises/getpw44bsd.c	/^main(void)		\/* FreeBSD\/Mac OS X version *\/$/;"	f	typeref:typename:int
main	./exercises/getpwsvr4.c	/^main(void)		\/* Linux\/Solaris version *\/$/;"	f	typeref:typename:int
main	./exercises/goodexit.c	/^main(void)$/;"	f	typeref:typename:int
main	./exercises/longpath.c	/^main(void)$/;"	f	typeref:typename:int
main	./exercises/pendlock.c	/^main(void)$/;"	f	typeref:typename:int
main	./exercises/pollmsg2.c	/^main()$/;"	f	typeref:typename:int
main	./exercises/prtime.c	/^main(void)$/;"	f	typeref:typename:int
main	./exercises/sizepipe.c	/^main(void)$/;"	f	typeref:typename:int
main	./exercises/vfork3.c	/^main(void)$/;"	f	typeref:typename:int
main	./exercises/zombie.c	/^main(void)$/;"	f	typeref:typename:int
main	./filedir/access.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./filedir/cdpwd.c	/^main(void)$/;"	f	typeref:typename:int
main	./filedir/changemod.c	/^main(void)$/;"	f	typeref:typename:int
main	./filedir/devrdev.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./filedir/filetype.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./filedir/ftw8.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./filedir/mycd.c	/^main(void)$/;"	f	typeref:typename:int
main	./filedir/umask.c	/^main(void)$/;"	f	typeref:typename:int
main	./filedir/unlink.c	/^main(void)$/;"	f	typeref:typename:int
main	./filedir/zap.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./fileio/fileflags.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./fileio/hole.c	/^main(void)$/;"	f	typeref:typename:int
main	./fileio/mycat.c	/^main(void)$/;"	f	typeref:typename:int
main	./fileio/seek.c	/^main(void)$/;"	f	typeref:typename:int
main	./intro/getcputc.c	/^main(void)$/;"	f	typeref:typename:int
main	./intro/hello.c	/^main(void)$/;"	f	typeref:typename:int
main	./intro/ls1.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./intro/mycat.c	/^main(void)$/;"	f	typeref:typename:int
main	./intro/shell1.c	/^main(void)$/;"	f	typeref:typename:int
main	./intro/shell2.c	/^main(void)$/;"	f	typeref:typename:int
main	./intro/testerror.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./intro/uidgid.c	/^main(void)$/;"	f	typeref:typename:int
main	./ipc1/add2.c	/^main(void)$/;"	f	typeref:typename:int
main	./ipc1/add2stdio.c	/^main(void)$/;"	f	typeref:typename:int
main	./ipc1/devzero.c	/^main(void)$/;"	f	typeref:typename:int
main	./ipc1/myuclc.c	/^main(void)$/;"	f	typeref:typename:int
main	./ipc1/pipe1.c	/^main(void)$/;"	f	typeref:typename:int
main	./ipc1/pipe2.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./ipc1/pipe4.c	/^main(void)$/;"	f	typeref:typename:int
main	./ipc1/popen1.c	/^main(void)$/;"	f	typeref:typename:int
main	./ipc1/popen2.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./ipc1/tshm.c	/^main(void)$/;"	f	typeref:typename:int
main	./ipc2/bindunix.c	/^main(void)$/;"	f	typeref:typename:int
main	./ipc2/open.fe/main.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./ipc2/open/main.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./ipc2/opend.fe/main.c	/^main(void)$/;"	f	typeref:typename:int
main	./ipc2/opend/main.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./ipc2/pollmsg.c	/^main()$/;"	f	typeref:typename:int
main	./ipc2/sendmsg.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./printer/print.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./printer/printd.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./proc/echoall.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./proc/exec1.c	/^main(void)$/;"	f	typeref:typename:int
main	./proc/exec2.c	/^main(void)$/;"	f	typeref:typename:int
main	./proc/fork1.c	/^main(void)$/;"	f	typeref:typename:int
main	./proc/fork2.c	/^main(void)$/;"	f	typeref:typename:int
main	./proc/nice.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./proc/pracct.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./proc/pruids.c	/^main(void)$/;"	f	typeref:typename:int
main	./proc/systest1.c	/^main(void)$/;"	f	typeref:typename:int
main	./proc/systest3.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./proc/tellwait1.c	/^main(void)$/;"	f	typeref:typename:int
main	./proc/tellwait2.c	/^main(void)$/;"	f	typeref:typename:int
main	./proc/test1.c	/^main(void)$/;"	f	typeref:typename:int
main	./proc/times1.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./proc/vfork1.c	/^main(void)$/;"	f	typeref:typename:int
main	./proc/wait1.c	/^main(void)$/;"	f	typeref:typename:int
main	./pty/main.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./relation/orphan3.c	/^main(void)$/;"	f	typeref:typename:int
main	./signals/child.c	/^main()$/;"	f	typeref:typename:int
main	./signals/critical.c	/^main(void)$/;"	f	typeref:typename:int
main	./signals/mask.c	/^main(void)$/;"	f	typeref:typename:int
main	./signals/read1.c	/^main(void)$/;"	f	typeref:typename:int
main	./signals/read2.c	/^main(void)$/;"	f	typeref:typename:int
main	./signals/reenter.c	/^main(void)$/;"	f	typeref:typename:int
main	./signals/sigtstp.c	/^main(void)$/;"	f	typeref:typename:int
main	./signals/sigusr.c	/^main(void)$/;"	f	typeref:typename:int
main	./signals/suspend1.c	/^main(void)$/;"	f	typeref:typename:int
main	./signals/suspend2.c	/^main(void)$/;"	f	typeref:typename:int
main	./signals/systest2.c	/^main(void)$/;"	f	typeref:typename:int
main	./signals/tsleep2.c	/^main(void)$/;"	f	typeref:typename:int
main	./sockets/findsvc.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./sockets/ruptime-dg.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./sockets/ruptime.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./sockets/ruptimed-dg.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./sockets/ruptimed-fd.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./sockets/ruptimed.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	./stdio/buf.c	/^main(void)$/;"	f	typeref:typename:int
main	./stdio/fgetsfputs.c	/^main(void)$/;"	f	typeref:typename:int
main	./stdio/getcharbug.c	/^main(void)$/;"	f	typeref:typename:int
main	./stdio/getcputc.c	/^main(void)$/;"	f	typeref:typename:int
main	./stdio/memstr.c	/^main()$/;"	f	typeref:typename:int
main	./stdio/mkstemp.c	/^main()$/;"	f	typeref:typename:int
main	./stdio/tempfiles.c	/^main(void)$/;"	f	typeref:typename:int
main	./termios/csize.c	/^main(void)$/;"	f	typeref:typename:int
main	./termios/settty.c	/^main(void)$/;"	f	typeref:typename:int
main	./termios/t_getpass.c	/^main(void)$/;"	f	typeref:typename:int
main	./termios/t_isatty.c	/^main(void)$/;"	f	typeref:typename:int
main	./termios/t_raw.c	/^main(void)$/;"	f	typeref:typename:int
main	./termios/t_ttyname.c	/^main(void)$/;"	f	typeref:typename:int
main	./termios/winch.c	/^main(void)$/;"	f	typeref:typename:int
main	./threadctl/atfork.c	/^main(void)$/;"	f	typeref:typename:int
main	./threadctl/suspend.c	/^main(void)$/;"	f	typeref:typename:int
main	./threadctl/timeout.c	/^main(void)$/;"	f	typeref:typename:int
main	./threads/badexit2.c	/^main(void)$/;"	f	typeref:typename:int
main	./threads/barrier.c	/^main()$/;"	f	typeref:typename:int
main	./threads/cleanup.c	/^main(void)$/;"	f	typeref:typename:int
main	./threads/exitstatus.c	/^main(void)$/;"	f	typeref:typename:int
main	./threads/threadid.c	/^main(void)$/;"	f	typeref:typename:int
main	./threads/timedlock.c	/^main(void)$/;"	f	typeref:typename:int
major_version	./printer/ipp.h	/^	int8_t  major_version;	\/* always 1 *\/$/;"	m	struct:ipp_hdr	typeref:typename:int8_t
make_temp	./stdio/mkstemp.c	/^make_temp(char *template)$/;"	f	typeref:typename:void
makethread	./threadctl/detach.c	/^makethread(void *(*fn)(void *), void *arg)$/;"	f	typeref:typename:int
maketimeout	./threads/maketimeout.c	/^maketimeout(struct timespec *tsp, long minutes)$/;"	f	typeref:typename:void
mask	./daemons/reread.c	/^sigset_t	mask;$/;"	v	typeref:typename:sigset_t
mask	./printer/printd.c	/^sigset_t				mask;$/;"	v	typeref:typename:sigset_t
mask	./threadctl/suspend.c	/^sigset_t	mask;$/;"	v	typeref:typename:sigset_t
max	./include/apue.h	/^#define	max(/;"	d
maxfd	./ipc1/popen.c	/^static int		maxfd;$/;"	v	typeref:typename:int	file:
maxfd	./lib/popen.c	/^static int		maxfd;$/;"	v	typeref:typename:int	file:
memstream	./exercises/fmemopen.c	/^struct memstream$/;"	s	file:
merge	./threads/barrier.c	/^merge()$/;"	f	typeref:typename:void
min	./include/apue.h	/^#define	min(/;"	d
minor_version	./printer/ipp.h	/^	int8_t  minor_version;	\/* always 1 *\/$/;"	m	struct:ipp_hdr	typeref:typename:int8_t
msg	./printer/print.h	/^	char msg[MSGLEN_MAX];		\/* error message *\/$/;"	m	struct:printresp	typeref:typename:char[]
msg	./threads/condvar.c	/^struct msg {$/;"	s	file:
mstream_close	./exercises/fmemopen.c	/^mstream_close(void *cookie)$/;"	f	typeref:typename:int	file:
mstream_read	./exercises/fmemopen.c	/^mstream_read(void *cookie, char *buf, int len)$/;"	f	typeref:typename:int	file:
mstream_seek	./exercises/fmemopen.c	/^mstream_seek(void *cookie, fpos_t pos, int whence)$/;"	f	typeref:typename:fpos_t	file:
mstream_write	./exercises/fmemopen.c	/^mstream_write(void *cookie, const char *buf, int len)$/;"	f	typeref:typename:int	file:
mtext	./exercises/pollmsg2.c	/^	char		mtext[MAXMSZ+1];$/;"	m	struct:mymesg	typeref:typename:char[]	file:
mtext	./ipc2/pollmsg.c	/^	char mtext[MAXMSZ];$/;"	m	struct:mymesg	typeref:typename:char[]	file:
mtext	./ipc2/sendmsg.c	/^	char mtext[MAXMSZ];$/;"	m	struct:mymesg	typeref:typename:char[]	file:
mtype	./exercises/pollmsg2.c	/^	long		mtype;$/;"	m	struct:mymesg	typeref:typename:long	file:
mtype	./ipc2/pollmsg.c	/^	long mtype;$/;"	m	struct:mymesg	typeref:typename:long	file:
mtype	./ipc2/sendmsg.c	/^	long mtype;$/;"	m	struct:mymesg	typeref:typename:long	file:
mutex	./exercises/pollmsg2.c	/^	pthread_mutex_t	mutex;$/;"	m	struct:threadinfo	typeref:typename:pthread_mutex_t	file:
mutex	./threadctl/timeout.c	/^pthread_mutex_t mutex;$/;"	v	typeref:typename:pthread_mutex_t
my_alarm	./signals/reenter.c	/^my_alarm(int signo)$/;"	f	typeref:typename:void	file:
my_exit1	./environ/doatexit.c	/^my_exit1(void)$/;"	f	typeref:typename:void	file:
my_exit2	./environ/doatexit.c	/^my_exit2(void)$/;"	f	typeref:typename:void	file:
myftw	./filedir/ftw8.c	/^myftw(char *pathname, Myfunc *func)$/;"	f	typeref:typename:int	file:
myfunc	./filedir/ftw8.c	/^myfunc(const char *pathname, const struct stat *statptr, int type)$/;"	f	typeref:typename:int	file:
myfunc	./filedir/ftw8.c	/^static Myfunc	myfunc;$/;"	v	typeref:typename:Myfunc	file:
mymesg	./exercises/pollmsg2.c	/^struct mymesg {$/;"	s	file:
mymesg	./ipc2/pollmsg.c	/^struct mymesg {$/;"	s	file:
mymesg	./ipc2/sendmsg.c	/^struct mymesg {$/;"	s	file:
name	./db/db.c	/^  char  *name;   \/* name db was opened under *\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:char *	file:
name	./ipc1/slock.h	/^	char name[_POSIX_NAME_MAX];$/;"	m	struct:slock	typeref:typename:char[]
nblk	./filedir/ftw8.c	/^static long	nreg, ndir, nblk, nchr, nfifo, nslink, nsock, ntot;$/;"	v	typeref:typename:long	file:
nchr	./filedir/ftw8.c	/^static long	nreg, ndir, nblk, nchr, nfifo, nslink, nsock, ntot;$/;"	v	typeref:typename:long	file:
ndir	./filedir/ftw8.c	/^static long	nreg, ndir, nblk, nchr, nfifo, nslink, nsock, ntot;$/;"	v	typeref:typename:long	file:
newmask	./lib/tellwait.c	/^static sigset_t newmask, oldmask, zeromask;$/;"	v	typeref:typename:sigset_t	file:
next	./printer/printd.c	/^	struct job      *next;		\/* next in list *\/$/;"	m	struct:job	typeref:struct:job *	file:
next	./printer/printd.c	/^	struct worker_thread  *next;	\/* next in list *\/$/;"	m	struct:worker_thread	typeref:struct:worker_thread *	file:
nextjob	./printer/printd.c	/^int32_t				nextjob;$/;"	v	typeref:typename:int32_t
nfifo	./filedir/ftw8.c	/^static long	nreg, ndir, nblk, nchr, nfifo, nslink, nsock, ntot;$/;"	v	typeref:typename:long	file:
nhash	./db/db.c	/^  DBHASH nhash;    \/* current hash table size *\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:DBHASH	file:
nreg	./filedir/ftw8.c	/^static long	nreg, ndir, nblk, nchr, nfifo, nslink, nsock, ntot;$/;"	v	typeref:typename:long	file:
ns_pipe	./lib/nspipe.c	/^ns_pipe(const char *name, int fd[2])$/;"	f	typeref:typename:int
nslink	./filedir/ftw8.c	/^static long	nreg, ndir, nblk, nchr, nfifo, nslink, nsock, ntot;$/;"	v	typeref:typename:long	file:
nsock	./filedir/ftw8.c	/^static long	nreg, ndir, nblk, nchr, nfifo, nslink, nsock, ntot;$/;"	v	typeref:typename:long	file:
ntid	./threads/threadid.c	/^pthread_t ntid;$/;"	v	typeref:typename:pthread_t
ntot	./filedir/ftw8.c	/^static long	nreg, ndir, nblk, nchr, nfifo, nslink, nsock, ntot;$/;"	v	typeref:typename:long	file:
nums	./threads/barrier.c	/^long nums[NUMNUM];$/;"	v	typeref:typename:long[]
oflag	./ipc2/opend.fe/main.c	/^int		 oflag;$/;"	v	typeref:typename:int
oflag	./ipc2/opend/main.c	/^int		 debug, oflag, client_size, log_to_stderr;$/;"	v	typeref:typename:int
oldmask	./lib/tellwait.c	/^static sigset_t newmask, oldmask, zeromask;$/;"	v	typeref:typename:sigset_t	file:
op	./advio/rot13c2.c	/^	enum rwop     op;$/;"	m	struct:buf	typeref:enum:rwop	file:
op	./advio/rot13c2.c.in	/^	enum rwop     op;$/;"	m	struct:buf	typeref:enum:rwop	file:
op	./printer/ipp.h	/^		int16_t op;	\/* operation ID *\/$/;"	m	union:ipp_hdr::__anon8162fff4010a	typeref:typename:int16_t
op_close	./lib/semaph.c	/^static struct sembuf	op_close[3] = {$/;"	v	typeref:struct:sembuf[3]	file:
op_endcreate	./lib/semaph.c	/^static struct sembuf	op_endcreate[2] = {$/;"	v	typeref:struct:sembuf[2]	file:
op_lock	./lib/semaph.c	/^static struct sembuf	op_lock[2] = {$/;"	v	typeref:struct:sembuf[2]	file:
op_op	./lib/semaph.c	/^static struct sembuf	op_op[1] = {$/;"	v	typeref:struct:sembuf[1]	file:
op_open	./lib/semaph.c	/^static struct sembuf	op_open[1] = {$/;"	v	typeref:struct:sembuf[1]	file:
op_unlock	./lib/semaph.c	/^static struct sembuf	op_unlock[1] = {$/;"	v	typeref:struct:sembuf[1]	file:
open_data	./environ/opendata.c	/^open_data(void)$/;"	f	typeref:typename:FILE *
open_max	./exercises/openmax.c	/^open_max(void)$/;"	f	typeref:typename:long
open_max	./lib/openmax.c	/^open_max(void)$/;"	f	typeref:typename:long
openclient	./ipc2/open.fe/Makefile	/^openclient:	main.o open.o$/;"	t
openclient	./ipc2/open/Makefile	/^openclient:	main.o open.o$/;"	t
opend	./ipc2/opend.fe/Makefile	/^opend:	main.o request.o cliargs.o$/;"	t
opend.poll	./ipc2/opend/Makefile	/^opend.poll:	main.o request.o cliargs.o client.o loop.poll.o$/;"	t
opend.select	./ipc2/opend/Makefile	/^opend.select:	main.o request.o cliargs.o client.o loop.select.o$/;"	t
openmax	./lib/openmax.c	/^static long	openmax = 0;$/;"	v	typeref:typename:long	file:
openmax	./lib/openmax.c	/^static long	openmax = OPEN_MAX;$/;"	v	typeref:typename:long	file:
operation	./printer/ipp.h	/^#define operation /;"	d
options	./standards/Makefile	/^options:	options.c$/;"	t
options.c	./standards/Makefile	/^options.c:	makeopt.awk sysopt.sym pathopt.sym$/;"	t
parent	./threadctl/atfork.c	/^parent(void)$/;"	f	typeref:typename:void
path_alloc	./lib/pathalloc.c	/^path_alloc(size_t *sizep) \/* also return allocated size, if nonnull *\/$/;"	f	typeref:typename:char *
pathconf.sym	./standards/Makefile	/^pathconf.sym:	pathconf-lim.sym$/;"	t
pathlen	./filedir/ftw8.c	/^static size_t pathlen;$/;"	v	typeref:typename:size_t	file:
pathmax	./lib/pathalloc.c	/^static long	pathmax = 0;$/;"	v	typeref:typename:long	file:
pathmax	./lib/pathalloc.c	/^static long	pathmax = PATH_MAX;$/;"	v	typeref:typename:long	file:
pathname	./ipc2/opend.fe/main.c	/^char	*pathname;$/;"	v	typeref:typename:char *
pathname	./ipc2/opend/main.c	/^char	*pathname;$/;"	v	typeref:typename:char *
pathname	./termios/ttyname.c	/^static char				pathname[_POSIX_PATH_MAX + 1];$/;"	v	typeref:typename:char[]	file:
pathopt.sym	./standards/Makefile	/^pathopt.sym:	pathconf-opt.sym$/;"	t
pclose	./ipc1/popen.c	/^pclose(FILE *fp)$/;"	f	typeref:typename:int
pclose	./lib/popen.c	/^pclose(FILE *fp)$/;"	f	typeref:typename:int
pfd1	./ipc1/tellwait.c	/^static int	pfd1[2], pfd2[2];$/;"	v	typeref:typename:int[2]	file:
pfd2	./ipc1/tellwait.c	/^static int	pfd1[2], pfd2[2];$/;"	v	typeref:typename:int[2]	file:
popen	./ipc1/popen.c	/^popen(const char *cmdstring, const char *type)$/;"	f	typeref:typename:FILE *
popen	./lib/popen.c	/^popen(const char *cmdstring, const char *type)$/;"	f	typeref:typename:FILE *
posix_version	./lib/pathalloc.c	/^static long	posix_version = 0;$/;"	v	typeref:typename:long	file:
pr_exit	./lib/prexit.c	/^pr_exit(int status)$/;"	f	typeref:typename:void
pr_ids	./relation/orphan3.c	/^pr_ids(char *name)$/;"	f	typeref:typename:void	file:
pr_limits	./environ/getrlimit.c	/^pr_limits(char *name, int resource)$/;"	f	typeref:typename:void	file:
pr_mask	./lib/prmask.c	/^pr_mask(const char *str)$/;"	f	typeref:typename:void
pr_stdio	./stdio/buf.c	/^pr_stdio(const char *name, FILE *fp)$/;"	f	typeref:typename:void
pr_times	./proc/times1.c	/^pr_times(clock_t real, struct tms *tmsstart, struct tms *tmsend)$/;"	f	typeref:typename:void	file:
pr_winsize	./termios/winch.c	/^pr_winsize(int fd)$/;"	f	typeref:typename:void	file:
pracct	./proc/Makefile	/^pracct:		pracct.c$/;"	t
prepare	./threadctl/atfork.c	/^prepare(void)$/;"	f	typeref:typename:void
prev	./printer/printd.c	/^	struct job      *prev;		\/* previous in list *\/$/;"	m	struct:job	typeref:struct:job *	file:
prev	./printer/printd.c	/^	struct worker_thread  *prev;	\/* previous in list *\/$/;"	m	struct:worker_thread	typeref:struct:worker_thread *	file:
print	./printer/Makefile	/^print:		print.o util.o $(ROOT)\/sockets\/clconn2.o$/;"	t
print.o	./printer/Makefile	/^print.o:	print.c $(HDRS)$/;"	t
print_family	./sockets/findsvc.c	/^print_family(struct addrinfo *aip)$/;"	f	typeref:typename:void
print_flags	./sockets/findsvc.c	/^print_flags(struct addrinfo *aip)$/;"	f	typeref:typename:void
print_protocol	./sockets/findsvc.c	/^print_protocol(struct addrinfo *aip)$/;"	f	typeref:typename:void
print_type	./sockets/findsvc.c	/^print_type(struct addrinfo *aip)$/;"	f	typeref:typename:void
print_uptime	./sockets/ruptime-dg.c	/^print_uptime(int sockfd, struct addrinfo *aip)$/;"	f	typeref:typename:void
print_uptime	./sockets/ruptime.c	/^print_uptime(int sockfd)$/;"	f	typeref:typename:void
printd	./printer/Makefile	/^printd:		printd.o util.o $(ROOT)\/sockets\/clconn2.o $(ROOT)\/sockets\/initsrv2.o$/;"	t
printd.o	./printer/Makefile	/^printd.o:	printd.c $(HDRS)$/;"	t
printer	./printer/printd.c	/^struct addrinfo		*printer;$/;"	v	typeref:struct:addrinfo *
printer_name	./printer/printd.c	/^char					*printer_name;$/;"	v	typeref:typename:char *
printer_status	./printer/printd.c	/^printer_status(int sfd, struct job *jp)$/;"	f	typeref:typename:int
printer_thread	./printer/printd.c	/^printer_thread(void *arg)$/;"	f	typeref:typename:void *
printfoo	./exercises/goodexit.c	/^printfoo(const char *s, const struct foo *fp)$/;"	f	typeref:typename:void
printfoo	./threads/badexit2.c	/^printfoo(const char *s, const struct foo *fp)$/;"	f	typeref:typename:void
printids	./threads/threadid.c	/^printids(const char *s)$/;"	f	typeref:typename:void
printreq	./printer/print.h	/^struct printreq {$/;"	s
printresp	./printer/print.h	/^struct printresp {$/;"	s
process_msg	./threads/condvar.c	/^process_msg(void)$/;"	f	typeref:typename:void
ptroff	./db/db.c	/^  off_t  ptroff; \/* chain ptr offset pointing to this idx record *\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:off_t	file:
ptrval	./db/db.c	/^  off_t  ptrval; \/* contents of chain ptr in index record *\/$/;"	m	struct:__anon3a7333ee0108	typeref:typename:off_t	file:
pty	./pty/Makefile	/^pty:	main.o loop.o driver.o$/;"	t
pty_fork	./lib/ptyfork.c	/^pty_fork(int *ptrfdm, char *slave_name, int slave_namesz,$/;"	f	typeref:typename:pid_t
ptym_open	./lib/ptyopen.c	/^ptym_open(char *pts_name, int pts_namesz)$/;"	f	typeref:typename:int
ptys_open	./lib/ptyopen.c	/^ptys_open(char *pts_name)$/;"	f	typeref:typename:int
q_head	./threads/rwlock.c	/^	struct job      *q_head;$/;"	m	struct:queue	typeref:struct:job *	file:
q_lock	./threads/rwlock.c	/^	pthread_rwlock_t q_lock;$/;"	m	struct:queue	typeref:typename:pthread_rwlock_t	file:
q_tail	./threads/rwlock.c	/^	struct job      *q_tail;$/;"	m	struct:queue	typeref:struct:job *	file:
qid	./exercises/pollmsg2.c	/^	int				qid;$/;"	m	struct:threadinfo	typeref:typename:int	file:
qid	./ipc2/pollmsg.c	/^	int qid;$/;"	m	struct:threadinfo	typeref:typename:int	file:
qlock	./threads/condvar.c	/^pthread_mutex_t qlock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t
qready	./threads/condvar.c	/^pthread_cond_t qready = PTHREAD_COND_INITIALIZER;$/;"	v	typeref:typename:pthread_cond_t
queue	./threads/rwlock.c	/^struct queue {$/;"	s	file:
queue_init	./threads/rwlock.c	/^queue_init(struct queue *qp)$/;"	f	typeref:typename:int
quitflag	./signals/suspend2.c	/^volatile sig_atomic_t	quitflag;	\/* set nonzero by signal handler *\/$/;"	v	typeref:typename:volatile sig_atomic_t
quitflag	./threadctl/suspend.c	/^int			quitflag;	\/* set nonzero by thread *\/$/;"	v	typeref:typename:int
read_lock	./include/apue.h	/^#define	read_lock(/;"	d
readmore	./printer/printd.c	/^readmore(int sockfd, char **bpp, int off, int *bszp)$/;"	f	typeref:typename:ssize_t
readn	./advio/readn.c	/^readn(int fd, void *ptr, size_t n)$/;"	f	typeref:typename:ssize_t
readn	./lib/readn.c	/^readn(int fd, void *ptr, size_t n)$/;"	f	typeref:typename:ssize_t
readw_lock	./include/apue.h	/^#define	readw_lock(/;"	d
ready	./exercises/pollmsg2.c	/^	pthread_cond_t	ready;$/;"	m	struct:threadinfo	typeref:typename:pthread_cond_t	file:
recv_fd	./lib/recvfd.c	/^recv_fd(int fd, ssize_t (*userfunc)(int, const void *, size_t))$/;"	f	typeref:typename:int
recv_ufd	./ipc2/recvfd2.c	/^recv_ufd(int fd, uid_t *uidptr,$/;"	f	typeref:typename:int
remove_job	./printer/printd.c	/^remove_job(struct job *target)$/;"	f	typeref:typename:void
replace_job	./printer/printd.c	/^replace_job(struct job *jp)$/;"	f	typeref:typename:void
req	./printer/printd.c	/^	struct printreq  req;		\/* copy of print request *\/$/;"	m	struct:job	typeref:struct:printreq	file:
request_id	./printer/ipp.h	/^	int32_t request_id;		\/* request ID *\/$/;"	m	struct:ipp_hdr	typeref:typename:int32_t
reread	./daemons/reread.c	/^reread(void)$/;"	f	typeref:typename:void
reread	./daemons/reread2.c	/^reread(void)$/;"	f	typeref:typename:void
reread	./printer/printd.c	/^int					reread;$/;"	v	typeref:typename:int
retcode	./printer/print.h	/^	uint32_t retcode;			\/* 0=success, !0=error code *\/$/;"	m	struct:printresp	typeref:typename:uint32_t
retry	./threadctl/timeout.c	/^retry(void *arg)$/;"	f	typeref:typename:void
rot13c2.c	./advio/Makefile	/^rot13c2.c:	rot13c2.c.in $(LIBAPUE)$/;"	t
rsize	./exercises/fmemopen.c	/^	size_t	rsize;	\/* real size of buffer *\/$/;"	m	struct:memstream	typeref:typename:size_t	file:
ruptime	./sockets/makefile	/^ruptime:	ruptime.o clconn2.o$/;"	t
ruptimed	./sockets/makefile	/^ruptimed:	ruptimed.o initsrv2.o$/;"	t
ruptimed-dg	./sockets/makefile	/^ruptimed-dg:	ruptimed-dg.o initsrv2.o$/;"	t
ruptimed-fd	./sockets/makefile	/^ruptimed-fd:	ruptimed-fd.o initsrv2.o$/;"	t
rwop	./advio/rot13c2.c	/^enum rwop {$/;"	g	file:
rwop	./advio/rot13c2.c.in	/^enum rwop {$/;"	g	file:
s	./printer/printd.c	/^		int16_t s;$/;"	m	union:add_option::__anon2e77ff37010a	typeref:typename:int16_t	file:
s_alloc	./ipc1/slock.c	/^s_alloc()$/;"	f	typeref:struct:slock *
s_free	./ipc1/slock.c	/^s_free(struct slock *sp)$/;"	f	typeref:typename:void
s_lock	./ipc1/slock.c	/^s_lock(struct slock *sp)$/;"	f	typeref:typename:int
s_trylock	./ipc1/slock.c	/^s_trylock(struct slock *sp)$/;"	f	typeref:typename:int
s_unlock	./ipc1/slock.c	/^s_unlock(struct slock *sp)$/;"	f	typeref:typename:int
save_termios	./lib/ttymodes.c	/^static struct termios		save_termios;$/;"	v	typeref:struct:termios	file:
scan_configfile	./printer/util.c	/^scan_configfile(char *keyword)$/;"	f	typeref:typename:char *	file:
searchdir	./termios/ttyname.c	/^searchdir(char *dirname, struct stat *fdstatp)$/;"	f	typeref:typename:char *	file:
sem_close	./lib/semaph.c	/^sem_close(int id)$/;"	f	typeref:typename:void
sem_create	./lib/semaph.c	/^sem_create(key_t key, int initval)$/;"	f	typeref:typename:int
sem_op	./lib/semaph.c	/^sem_op(int id, int value)$/;"	f	typeref:typename:void
sem_open	./lib/semaph.c	/^sem_open(key_t key)$/;"	f	typeref:typename:int
sem_rm	./lib/semaph.c	/^sem_rm(int id)$/;"	f	typeref:typename:void
sem_signal	./lib/semaph.c	/^sem_signal(int id)$/;"	f	typeref:typename:void
sem_wait	./lib/semaph.c	/^sem_wait(int id)$/;"	f	typeref:typename:void
semp	./ipc1/slock.h	/^	sem_t *semp;$/;"	m	struct:slock	typeref:typename:sem_t *
semun	./lib/semaph.c	/^	union semun {$/;"	u	function:sem_create	file:
send_err	./lib/senderr.c	/^send_err(int fd, int errcode, const char *msg)$/;"	f	typeref:typename:int
send_fd	./ipc2/sendfd2.c	/^send_fd(int fd, int fd_to_send)$/;"	f	typeref:typename:int
send_fd	./lib/sendfd.c	/^send_fd(int fd, int fd_to_send)$/;"	f	typeref:typename:int
serv_accept	./lib/servaccept.c	/^serv_accept(int listenfd, uid_t *uidptr)$/;"	f	typeref:typename:int
serv_listen	./lib/servlisten.c	/^serv_listen(const char *name)$/;"	f	typeref:typename:int
serve	./sockets/ruptimed-dg.c	/^serve(int sockfd)$/;"	f	typeref:typename:void
serve	./sockets/ruptimed-fd.c	/^serve(int sockfd)$/;"	f	typeref:typename:void
serve	./sockets/ruptimed.c	/^serve(int sockfd)$/;"	f	typeref:typename:void
set_cloexec	./lib/setfd.c	/^set_cloexec(int fd)$/;"	f	typeref:typename:int
set_fl	./fileio/setfl.c	/^set_fl(int fd, int flags) \/* flags are file status flags to turn on *\/$/;"	f	typeref:typename:void
set_fl	./lib/setfl.c	/^set_fl(int fd, int flags) \/* flags are file status flags to turn on *\/$/;"	f	typeref:typename:void
set_noecho	./pty/main.c	/^set_noecho(int fd)		\/* turn off echo (for slave pty) *\/$/;"	f	typeref:typename:void	file:
setasync	./exercises/asyncsocket.c	/^setasync(int sockfd)$/;"	f	typeref:typename:int
sig_alrm	./lib/sleep.c	/^sig_alrm(int signo)$/;"	f	typeref:typename:void	file:
sig_alrm	./signals/mask.c	/^sig_alrm(int signo)$/;"	f	typeref:typename:void	file:
sig_alrm	./signals/read1.c	/^sig_alrm(int signo)$/;"	f	typeref:typename:void	file:
sig_alrm	./signals/read2.c	/^sig_alrm(int signo)$/;"	f	typeref:typename:void	file:
sig_alrm	./signals/sleep1.c	/^sig_alrm(int signo)$/;"	f	typeref:typename:void	file:
sig_alrm	./signals/sleep2.c	/^sig_alrm(int signo)$/;"	f	typeref:typename:void	file:
sig_catch	./termios/t_raw.c	/^sig_catch(int signo)$/;"	f	typeref:typename:void	file:
sig_chld	./signals/systest2.c	/^sig_chld(int signo)$/;"	f	typeref:typename:void	file:
sig_cld	./signals/child.c	/^sig_cld(int signo)	\/* interrupts pause() *\/$/;"	f	typeref:typename:void	file:
sig_hup	./relation/orphan3.c	/^sig_hup(int signo)$/;"	f	typeref:typename:void	file:
sig_int	./intro/shell2.c	/^sig_int(int signo)$/;"	f	typeref:typename:void
sig_int	./signals/suspend1.c	/^sig_int(int signo)$/;"	f	typeref:typename:void	file:
sig_int	./signals/suspend2.c	/^sig_int(int signo)	\/* one signal handler for SIGINT and SIGQUIT *\/$/;"	f	typeref:typename:void	file:
sig_int	./signals/systest2.c	/^sig_int(int signo)$/;"	f	typeref:typename:void	file:
sig_int	./signals/tsleep2.c	/^sig_int(int signo)$/;"	f	typeref:typename:void	file:
sig_pipe	./ipc1/pipe4.c	/^sig_pipe(int signo)$/;"	f	typeref:typename:void	file:
sig_quit	./signals/critical.c	/^sig_quit(int signo)$/;"	f	typeref:typename:void	file:
sig_term	./pty/loop.c	/^sig_term(int signo)$/;"	f	typeref:typename:void	file:
sig_tstp	./signals/sigtstp.c	/^sig_tstp(int signo)	\/* signal handler for SIGTSTP *\/$/;"	f	typeref:typename:void	file:
sig_usr	./lib/tellwait.c	/^sig_usr(int signo)	\/* one signal handler for SIGUSR1 and SIGUSR2 *\/$/;"	f	typeref:typename:void	file:
sig_usr	./signals/sigusr.c	/^sig_usr(int signo)		\/* argument is signal number *\/$/;"	f	typeref:typename:void	file:
sig_usr1	./signals/mask.c	/^sig_usr1(int signo)$/;"	f	typeref:typename:void	file:
sig_winch	./termios/winch.c	/^sig_winch(int signo)$/;"	f	typeref:typename:void	file:
sigaddset	./signals/setops.c	/^sigaddset(sigset_t *set, int signo)$/;"	f	typeref:typename:int
sigalrm	./sockets/ruptime-dg.c	/^sigalrm(int signo)$/;"	f	typeref:typename:void
sigcaught	./pty/loop.c	/^static volatile sig_atomic_t	sigcaught;	\/* set by signal handler *\/$/;"	v	typeref:typename:volatile sig_atomic_t	file:
sigdelset	./signals/setops.c	/^sigdelset(sigset_t *set, int signo)$/;"	f	typeref:typename:int
sigflag	./lib/tellwait.c	/^static volatile sig_atomic_t sigflag; \/* set nonzero by sig handler *\/$/;"	v	typeref:typename:volatile sig_atomic_t	file:
sighup	./daemons/reread2.c	/^sighup(int signo)$/;"	f	typeref:typename:void
sigint	./exercises/pendlock.c	/^sigint(int signo)$/;"	f	typeref:typename:void
sigismember	./signals/setops.c	/^sigismember(const sigset_t *set, int signo)$/;"	f	typeref:typename:int
signal	./lib/signal.c	/^signal(int signo, Sigfunc *func)$/;"	f	typeref:typename:Sigfunc *
signal_intr	./lib/signalintr.c	/^signal_intr(int signo, Sigfunc *func)$/;"	f	typeref:typename:Sigfunc *
signal_thread	./printer/printd.c	/^signal_thread(void *arg)$/;"	f	typeref:typename:void *
sigterm	./daemons/reread2.c	/^sigterm(int signo)$/;"	f	typeref:typename:void
size	./printer/print.h	/^	uint32_t size;				\/* size in bytes *\/$/;"	m	struct:printreq	typeref:typename:uint32_t
sleep	./exercises/sleep.c	/^sleep(unsigned seconds)$/;"	f	typeref:typename:unsigned
sleep	./lib/sleep.c	/^sleep(unsigned int seconds)$/;"	f	typeref:typename:unsigned int
sleep1	./signals/sleep1.c	/^sleep1(unsigned int seconds)$/;"	f	typeref:typename:unsigned int
sleep2	./signals/sleep2.c	/^sleep2(unsigned int seconds)$/;"	f	typeref:typename:unsigned int
sleep_us	./exercises/sleepus_poll.c	/^sleep_us(unsigned int nusecs)$/;"	f	typeref:typename:void
sleep_us	./exercises/sleepus_select.c	/^sleep_us(unsigned int nusecs)$/;"	f	typeref:typename:void
sleep_us	./lib/sleepus.c	/^sleep_us(unsigned int nusecs)$/;"	f	typeref:typename:void
slock	./ipc1/slock.h	/^struct slock {$/;"	s
slock.o	./ipc1/Makefile	/^slock.o:	slock.c slock.h$/;"	t
snums	./threads/barrier.c	/^long snums[NUMNUM];$/;"	v	typeref:typename:long[]
sockfd	./printer/printd.c	/^	int                    sockfd;	\/* socket *\/$/;"	m	struct:worker_thread	typeref:typename:int	file:
st	./printer/ipp.h	/^		int16_t st;	\/* status *\/$/;"	m	union:ipp_hdr::__anon8162fff4010a	typeref:typename:int16_t
status	./printer/ipp.h	/^#define status /;"	d
strerror	./lib/strerror.c	/^strerror(int error)$/;"	f	typeref:typename:char *
submit_file	./printer/print.c	/^submit_file(int fd, int sockfd, const char *fname, size_t nbytes,$/;"	f	typeref:typename:void
sysconf.sym	./standards/Makefile	/^sysconf.sym:	sysconf-lim.sym$/;"	t
sysopt.sym	./standards/Makefile	/^sysopt.sym:	sysconf-opt.sym$/;"	t
system	./proc/system.c	/^system(const char *cmdstring)	\/* version without signal handling *\/$/;"	f	typeref:typename:int
system	./signals/system.c	/^system(const char *cmdstring)	\/* with appropriate signal handling *\/$/;"	f	typeref:typename:int
systest1	./proc/Makefile	/^systest1:	system.o systest1.o$/;"	t
systest2	./signals/Makefile	/^systest2:	systest2.o system.o$/;"	t
systest3	./proc/Makefile	/^systest3:	system.o systest3.o$/;"	t
t4	./db/Makefile	/^t4:	$(LIBAPUE)$/;"	t
tail	./termios/ttyname.c	/^static struct devdir	*tail;$/;"	v	typeref:struct:devdir *	file:
thr_fn	./daemons/reread.c	/^thr_fn(void *arg)$/;"	f	typeref:typename:void *
thr_fn	./threadctl/atfork.c	/^thr_fn(void *arg)$/;"	f	typeref:typename:void *
thr_fn	./threadctl/suspend.c	/^thr_fn(void *arg)$/;"	f	typeref:typename:void *
thr_fn	./threads/barrier.c	/^thr_fn(void *arg)$/;"	f	typeref:typename:void *
thr_fn	./threads/threadid.c	/^thr_fn(void *arg)$/;"	f	typeref:typename:void *
thr_fn1	./exercises/goodexit.c	/^thr_fn1(void *arg)$/;"	f	typeref:typename:void *
thr_fn1	./threads/badexit2.c	/^thr_fn1(void *arg)$/;"	f	typeref:typename:void *
thr_fn1	./threads/cleanup.c	/^thr_fn1(void *arg)$/;"	f	typeref:typename:void *
thr_fn1	./threads/exitstatus.c	/^thr_fn1(void *arg)$/;"	f	typeref:typename:void *
thr_fn2	./threads/badexit2.c	/^thr_fn2(void *arg)$/;"	f	typeref:typename:void *
thr_fn2	./threads/cleanup.c	/^thr_fn2(void *arg)$/;"	f	typeref:typename:void *
thr_fn2	./threads/exitstatus.c	/^thr_fn2(void *arg)$/;"	f	typeref:typename:void *
thread_init	./threadctl/getenv2.c	/^thread_init(void)$/;"	f	typeref:typename:void	file:
thread_init	./threadctl/getenv3.c	/^thread_init(void)$/;"	f	typeref:typename:void	file:
threadinfo	./exercises/pollmsg2.c	/^struct threadinfo {$/;"	s	file:
threadinfo	./ipc2/pollmsg.c	/^struct threadinfo {$/;"	s	file:
tid	./printer/printd.c	/^	pthread_t              tid;		\/* thread ID *\/$/;"	m	struct:worker_thread	typeref:typename:pthread_t	file:
timeout	./threadctl/timeout.c	/^timeout(const struct timespec *when, void (*func)(void *), void *arg)$/;"	f	typeref:typename:void
timeout_helper	./threadctl/timeout.c	/^timeout_helper(void *arg)$/;"	f	typeref:typename:void *
to_arg	./threadctl/timeout.c	/^	void           *to_arg;			\/* argument *\/$/;"	m	struct:to_info	typeref:typename:void *	file:
to_fn	./threadctl/timeout.c	/^	void	      (*to_fn)(void *);	\/* function *\/$/;"	m	struct:to_info	typeref:typename:void (*)(void *)	file:
to_info	./threadctl/timeout.c	/^struct to_info {$/;"	s	file:
to_wait	./threadctl/timeout.c	/^	struct timespec to_wait;		\/* time to wait *\/$/;"	m	struct:to_info	typeref:struct:timespec	file:
tok_ptr	./environ/cmd1.c	/^char	*tok_ptr;		\/* global pointer for get_token() *\/$/;"	v	typeref:typename:char *
translate	./advio/rot13a.c	/^translate(unsigned char c)$/;"	f	typeref:typename:unsigned char
translate	./advio/rot13c2.c	/^translate(unsigned char c)$/;"	f	typeref:typename:unsigned char
translate	./advio/rot13c2.c.in	/^translate(unsigned char c)$/;"	f	typeref:typename:unsigned char
tread	./printer/util.c	/^tread(int fd, void *buf, size_t nbytes, unsigned int timout)$/;"	f	typeref:typename:ssize_t
treadn	./printer/util.c	/^treadn(int fd, void *buf, size_t nbytes, unsigned int timout)$/;"	f	typeref:typename:ssize_t
tsleep2	./signals/Makefile	/^tsleep2:	tsleep2.o sleep2.o$/;"	t
tty_atexit	./lib/ttymodes.c	/^tty_atexit(void)		\/* can be set up by atexit(tty_atexit) *\/$/;"	f	typeref:typename:void
tty_cbreak	./lib/ttymodes.c	/^tty_cbreak(int fd)	\/* put terminal into a cbreak mode *\/$/;"	f	typeref:typename:int
tty_raw	./lib/ttymodes.c	/^tty_raw(int fd)		\/* put terminal into a raw mode *\/$/;"	f	typeref:typename:int
tty_reset	./lib/ttymodes.c	/^tty_reset(int fd)		\/* restore terminal's mode *\/$/;"	f	typeref:typename:int
tty_termios	./lib/ttymodes.c	/^tty_termios(void)		\/* let caller see original tty state *\/$/;"	f	typeref:struct:termios *
ttyname	./termios/ttyname.c	/^ttyname(int fd)$/;"	f	typeref:typename:char *
ttysavefd	./lib/ttymodes.c	/^static int					ttysavefd = -1;$/;"	v	typeref:typename:int	file:
ttystate	./lib/ttymodes.c	/^static enum { RESET, RAW, CBREAK }	ttystate = RESET;$/;"	v	typeref:enum:__anonc8c5a5b20103	file:
type_to_flags	./exercises/fmemopen.c	/^type_to_flags(const char *__restrict type)$/;"	f	typeref:typename:int	file:
u	./printer/ipp.h	/^	} u;$/;"	m	struct:ipp_hdr	typeref:union:ipp_hdr::__anon8162fff4010a
uid	./ipc2/opend/opend.h	/^  uid_t	uid;$/;"	m	struct:__anonad44fb700108	typeref:typename:uid_t
un_lock	./include/apue.h	/^#define	un_lock(/;"	d
update	./ipc1/devzero.c	/^update(long *ptr)$/;"	f	typeref:typename:int	file:
update_jobno	./printer/printd.c	/^update_jobno(void)$/;"	f	typeref:typename:void
usernm	./printer/print.h	/^	char usernm[USERNM_MAX];	\/* user's name *\/$/;"	m	struct:printreq	typeref:typename:char[]
util.o	./printer/Makefile	/^util.o:		util.c $(HDRS)$/;"	t
val	./lib/semaph.c	/^		int		val;$/;"	m	union:sem_create::semun	typeref:typename:int	file:
vsize	./exercises/fmemopen.c	/^	size_t	vsize;	\/* virtual size of buffer *\/$/;"	m	struct:memstream	typeref:typename:size_t	file:
waitloc	./threadctl/suspend.c	/^pthread_cond_t waitloc = PTHREAD_COND_INITIALIZER;$/;"	v	typeref:typename:pthread_cond_t
worker_thread	./printer/printd.c	/^struct worker_thread {$/;"	s	file:
workerlock	./printer/printd.c	/^pthread_mutex_t		workerlock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t
workers	./printer/printd.c	/^struct worker_thread	*workers;$/;"	v	typeref:struct:worker_thread *
workq	./threads/condvar.c	/^struct msg *workq;$/;"	v	typeref:struct:msg *
write_lock	./include/apue.h	/^#define	write_lock(/;"	d
writen	./advio/writen.c	/^writen(int fd, const void *ptr, size_t n)$/;"	f	typeref:typename:ssize_t
writen	./lib/writen.c	/^writen(int fd, const void *ptr, size_t n)$/;"	f	typeref:typename:ssize_t
writew_lock	./include/apue.h	/^#define	writew_lock(/;"	d
xsi_version	./lib/pathalloc.c	/^static long	xsi_version = 0;$/;"	v	typeref:typename:long	file:
zeromask	./lib/tellwait.c	/^static sigset_t newmask, oldmask, zeromask;$/;"	v	typeref:typename:sigset_t	file:
